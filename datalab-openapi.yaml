openapi: 3.0.2
info:
     title: DataLab
     version: 0.1.0
paths:
     /api/login:
          post:
               tags:
               - auth
               summary: Log in and get token
               operationId: login_for_access_token_api_login_post
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_login_for_access_token_api_login_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/TokenSchema'
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/passwordForget:
          post:
               tags:
               - auth
               summary: Forgot password
               description: 'Forgot password，Send a password reset email

                    :return:'
               operationId: forget_password_api_passwordForget_post
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_forget_password_api_passwordForget_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/passwordReset:
          post:
               tags:
               - auth
               summary: Reset Password
               description: 'clickReset Passwordclick，clickFront-endReset Passwordclick（Carry aroundtoken）； The frontend resets the user password + token
                    Send to this interface


                    :return:'
               operationId: reset_password_api_passwordReset_post
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_reset_password_api_passwordReset_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/emailVerify:
          get:
               tags:
               - auth
               summary: Verify email validity
               operationId: verify_email_api_emailVerify_get
               parameters:
               -    required: true
                    schema:
                         title: Token
                         type: string
                    name: token
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/me:
          get:
               tags:
               - auth
               summary: Current logged-in user information
               description: Retrieve user
               operationId: read_me_api_me_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/base/ui/platform:
          get:
               tags:
               - admin/base/ui
               summary: Platform Configuration Details
               operationId: read_platform_api_admin_base_ui_platform_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - admin/base/ui
               summary: Platform configuration modification
               operationId: update_platform_api_admin_base_ui_platform_put
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_update_platform_api_admin_base_ui_platform_put'
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/base/ui
               summary: Platform Configuration Creation
               operationId: create_platform_api_admin_base_ui_platform_post
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_create_platform_api_admin_base_ui_platform_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/base/ui/indexui:
          get:
               tags:
               - admin/base/ui
               summary: Home Configuration Details
               operationId: read_indexui_api_admin_base_ui_indexui_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - admin/base/ui
               summary: Home page configuration Modification
               operationId: update_indexui_api_admin_base_ui_indexui_put
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/UiUpdateForm'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/base/ui/indexui/file:
          put:
               tags:
               - admin/base/ui
               summary: Home page configuration Modificationfile
               operationId: update_indexui_file_api_admin_base_ui_indexui_file_put
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_update_indexui_file_api_admin_base_ui_indexui_file_put'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/base/ui/experimentui:
          get:
               tags:
               - admin/base/ui
               summary: Experiment page configuration details
               operationId: read_experimentui_api_admin_base_ui_experimentui_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - admin/base/ui
               summary: Experiment page configuration modification
               operationId: update_experimentui_api_admin_base_ui_experimentui_put
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_update_experimentui_api_admin_base_ui_experimentui_put'
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/base/ui
               summary: Experiment page configuration creation
               operationId: create_experimentui_api_admin_base_ui_experimentui_post
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_create_experimentui_api_admin_base_ui_experimentui_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/base/ui/skeletonui:
          get:
               tags:
               - admin/base/ui
               summary: Profiling tool page configuration details
               operationId: read_skeletonui_api_admin_base_ui_skeletonui_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - admin/base/ui
               summary: Profiling tool page configuration changes
               operationId: update_skeletonui_api_admin_base_ui_skeletonui_put
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_update_skeletonui_api_admin_base_ui_skeletonui_put'
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/base/ui
               summary: Profiling tool page configuration creation
               operationId: create_skeletonui_api_admin_base_ui_skeletonui_post
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_create_skeletonui_api_admin_base_ui_skeletonui_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/base/sysconf/emailconf/test:
          post:
               tags:
               - admin/base/sysconf
               summary: System mail configuration test
               description: 'System mail configuration test


                    :param receiver:

                    :param current_user:

                    :return:'
               operationId: test_emailconf_api_admin_base_sysconf_emailconf_test_post
               parameters:
               -    required: true
                    schema:
                         title: Receiver
                         type: string
                    name: receiver
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/base/sysconf/emailconfs/{conf_id}:
          put:
               tags:
               - admin/base/sysconf
               summary: System mail configuration update
               description: 'System mail configuration update


                    :param conf_id:

                    :param form:

                    :param current_user:

                    :return:'
               operationId: update_emailconf_api_admin_base_sysconf_emailconfs__conf_id__put
               parameters:
               -    required: true
                    schema:
                         title: Conf Id
                         type: string
                    name: conf_id
                    in: path
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_update_emailconf_api_admin_base_sysconf_emailconfs__conf_id__put'
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/base/sysconf/emailconfs/:
          get:
               tags:
               - admin/base/sysconf
               summary: System mail configuration list
               operationId: read_emailconfs_api_admin_base_sysconf_emailconfs__get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/experiments/:
          get:
               tags:
               - admin/experiments
               summary: List of experiments (Trial run experiments are not included)
               description: 'NOTE： Experiments during the trial run are not shown (is_trial=True)


                    :param is_shared:

                    :param name:

                    :param creator:

                    :param page:

                    :param size:

                    :param sort:

                    :param current_user:

                    :return:'
               operationId: read_experiments_api_admin_experiments__get
               parameters:
               -    required: false
                    schema:
                         title: Is Shared
                         type: boolean
                    name: is_shared
                    in: query
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Creator
                         type: string
                    name: creator
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               -    required: false
                    schema:
                         title: Sort
                         type: string
                         default: desc
                    name: sort
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/permissions/tree:
          get:
               tags:
               - admin/permissions
               summary: Permission tree structure
               description: Gets the permission tree structure
               operationId: get_permissions_tree_api_admin_permissions_tree_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/skel_adm/categories/:
          get:
               tags:
               - admin/skel_adm
               summary: Tool category list
               description: ':param page:

                    :param size:

                    :param current_user:

                    :return:'
               operationId: read_skeleton_categories_api_admin_skel_adm_categories__get
               parameters:
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/skel_adm
               summary: Tool category creation
               description: ':param name:

                    :param current_user:

                    :return:'
               operationId: create_skeleton_category_api_admin_skel_adm_categories__post
               parameters:
               -    required: true
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/skel_adm/categories/{category_id}:
          put:
               tags:
               - admin/skel_adm
               summary: Tool classification update
               description: ':param category_id:

                    :param name:

                    :param swap_with:

                    :param current_user:

                    :return:'
               operationId: update_skeleton_category_api_admin_skel_adm_categories__category_id__put
               parameters:
               -    required: true
                    schema:
                         title: Category Id
                         type: string
                    name: category_id
                    in: path
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Swap With
                         type: string
                    name: swap_with
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - admin/skel_adm
               summary: Tool category Delete
               description: ':param category_id:

                    :param name:

                    :param current_user:

                    :return:'
               operationId: delete_skeleton_category_api_admin_skel_adm_categories__category_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Category Id
                         type: string
                    name: category_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/skel_adm/audit/:
          get:
               tags:
               - admin/skel_adm
               summary: Analysis tool review list
               description: ':param background_tasks:

                    :param name:

                    :param user_name:

                    :param state:

                    :param is_online:

                    :param page:

                    :param size:

                    :param current_user:

                    :return:'
               operationId: read_skeleton_audits_api_admin_skel_adm_audit__get
               parameters:
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: User Name
                         type: string
                    name: user_name
                    in: query
               -    required: false
                    schema:
                         title: State
                         type: string
                    name: state
                    in: query
               -    required: false
                    schema:
                         title: Is Online
                         type: boolean
                    name: is_online
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/skel_adm/audit/{skeleton_id}:
          put:
               tags:
               - admin/skel_adm
               summary: Analysis tools review and edit
               description: "Administrator，Analysis tools that have been submitted（APPROVING），Conduct audit operations：\n    - APPROVED\n \
                    \   - DISAPPROVED\n\n:param skeleton_id:\n:param audit_state:\n\
                    :param audit_opinion:\n:param category_name:\n:param current_user:\n\
                    :return:"
               operationId: put_skeleton_audit_api_admin_skel_adm_audit__skeleton_id__put
               parameters:
               -    required: true
                    schema:
                         title: Skeleton Id
                         type: string
                    name: skeleton_id
                    in: path
               -    required: true
                    schema:
                         title: Audit State
                         type: string
                    name: audit_state
                    in: query
               -    required: false
                    schema:
                         title: Audit Opinion
                         type: string
                    name: audit_opinion
                    in: query
               -    required: false
                    schema:
                         title: Category Name
                         type: string
                    name: category_name
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/skel_adm/skeletons/:
          get:
               tags:
               - admin/skel_adm
               summary: List of analysis tools
               description: ':param background_tasks:

                    :param name:

                    :param user_name:

                    :param state:

                    :param is_online:

                    :param page:

                    :param size:

                    :param current_user:

                    :return:'
               operationId: read_skeletons_api_admin_skel_adm_skeletons__get
               parameters:
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: User Name
                         type: string
                    name: user_name
                    in: query
               -    required: false
                    schema:
                         title: State
                         type: string
                    name: state
                    in: query
               -    required: false
                    schema:
                         title: Is Online
                         type: boolean
                    name: is_online
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/skel_adm/skeletons/{skeleton_id}:
          get:
               tags:
               - admin/skel_adm
               summary: Analysis Tool Details
               description: ':param skeleton_id:

                    :param current_user:

                    :return:'
               operationId: read_skeleton_api_admin_skel_adm_skeletons__skeleton_id__get
               parameters:
               -    required: true
                    schema:
                         title: Skeleton Id
                         type: string
                    name: skeleton_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/skel_adm/{skeleton_id}:
          put:
               tags:
               - admin/skel_adm
               summary: Analysis tool updates
               description: "（Administrator）Update analysis tools：\n    - Go online/Go offline\n    - Classification\n\n:param skeleton_id:\n\
                    :param update_form:\n:param current_user:\n:return:"
               operationId: update_skeleton_api_admin_skel_adm__skeleton_id__put
               parameters:
               -    required: true
                    schema:
                         title: Skeleton Id
                         type: string
                    name: skeleton_id
                    in: path
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_update_skeleton_api_admin_skel_adm__skeleton_id__put'
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/skel_adm/analyses/:
          get:
               tags:
               - admin/skel_adm/analyses
               summary: List of analyses
               description: ':param name:

                    :param creator:

                    :param skeleton_id:

                    :param state:

                    :param page:

                    :param size:

                    :param sort:

                    :param current_user:

                    :return:'
               operationId: read_analyses_api_admin_skel_adm_analyses__get
               parameters:
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Creator
                         type: string
                    name: creator
                    in: query
               -    required: false
                    schema:
                         title: Skeleton Id
                         type: string
                    name: skeleton_id
                    in: query
               -    required: false
                    schema:
                         title: State
                         type: string
                    name: state
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               -    required: false
                    schema:
                         title: Sort
                         type: string
                         default: desc
                    name: sort
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/visualization:
          get:
               tags:
               - admin/tool_adm
               summary: Whereas class components-Lists
               operationId: read_visualization_tools_api_admin_tool_adm_visualization_get
               parameters:
               -    required: false
                    schema:
                         title: Skip
                         type: integer
                         default: 0
                    name: skip
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               -    required: false
                    schema:
                         title: State
                         type: boolean
                    name: state
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/visualization/state:
          put:
               tags:
               - admin/tool_adm
               summary: Disable/Enable a visualization component
               operationId: update_visualization_tool_state_api_admin_tool_adm_visualization_state_put
               parameters:
               -    required: true
                    schema:
                         title: Tool Id
                         type: string
                    name: tool_id
                    in: query
               -    required: true
                    schema:
                         title: State
                         type: boolean
                    name: state
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/analysis/tree:
          get:
               tags:
               - admin/tool_adm
               summary: Analyzing class Components-Tree pattern
               operationId: read_tools_api_admin_tool_adm_analysis_tree_get
               parameters:
               -    required: false
                    schema:
                         title: State
                         anyOf:
                         -    type: boolean
                         -    type: string
                         default: ''
                    name: state
                    in: query
               -    required: false
                    schema:
                         title: Audit
                         type: string
                         default: ''
                    name: audit
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/analysis/list:
          post:
               tags:
               - admin/tool_adm
               summary: Analyzing class Components-Table schema
               operationId: get_components_api_admin_tool_adm_analysis_list_post
               parameters:
               -    required: false
                    schema:
                         title: Skip
                         type: integer
                         default: 0
                    name: skip
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Query Sets
                                   type: object
                                   default: {}
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/{component_name}:
          get:
               tags:
               - admin/tool_adm
               summary: Component Details
               operationId: get_component_api_admin_tool_adm__component_name__get
               parameters:
               -    required: true
                    schema:
                         title: Component Name
                         type: string
                    name: component_name
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/{component_id}:
          put:
               tags:
               - admin/tool_adm
               summary: Component editing
               operationId: update_component_api_admin_tool_adm__component_id__put
               parameters:
               -    required: true
                    schema:
                         title: Component Id
                         type: string
                    name: component_id
                    in: path
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Update Set
                                   type: object
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - admin/tool_adm
               summary: Component removal
               operationId: delete_component_api_admin_tool_adm__component_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Component Id
                         type: string
                    name: component_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/runtime/env:
          get:
               tags:
               - admin/tool_adm
               summary: Get All Env
               operationId: get_all_env_api_admin_tool_adm_runtime_env_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/trials/:
          post:
               tags:
               - admin/tool_adm
               summary: Component trial run creation
               operationId: create_trial_experiment_api_admin_tool_adm_trials__post
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/TrialExperimentSchema'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/trials/{expt_id}:
          get:
               tags:
               - admin/tool_adm
               summary: Component trial run details
               operationId: read_trial_experiment_api_admin_tool_adm_trials__expt_id__get
               parameters:
               -    required: true
                    schema:
                         title: Expt Id
                         type: string
                    name: expt_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/audit/{component_id}:
          put:
               tags:
               - admin/tool_adm
               summary: Component auditing
               operationId: audit_component_api_admin_tool_adm_audit__component_id__put
               parameters:
               -    required: true
                    schema:
                         title: Component Id
                         type: string
                    name: component_id
                    in: path
               -    required: true
                    schema:
                         title: Audit
                         type: string
                    name: audit
                    in: query
               -    required: false
                    schema:
                         title: Info
                         type: string
                         default: ''
                    name: info
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/audit/submit/{component_id}:
          put:
               tags:
               - admin/tool_adm
               summary: Component Audit Submit
               operationId: component_audit_submit_api_admin_tool_adm_audit_submit__component_id__put
               parameters:
               -    required: true
                    schema:
                         title: Component Id
                         type: string
                    name: component_id
                    in: path
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Update Set
                                   type: object
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/audit/info:
          get:
               tags:
               - admin/tool_adm
               summary: Audit Info
               operationId: audit_info_api_admin_tool_adm_audit_info_get
               parameters:
               -    required: false
                    schema:
                         title: Audit Type
                         type: string
                    name: audit_type
                    in: query
               -    required: false
                    schema:
                         title: Skip
                         type: integer
                         default: 0
                    name: skip
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/tool_adm
               summary: Audit Info
               operationId: audit_info_api_admin_tool_adm_audit_info_post
               parameters:
               -    required: false
                    schema:
                         title: Audit Type
                         type: string
                    name: audit_type
                    in: query
               -    required: false
                    schema:
                         title: Skip
                         type: integer
                         default: 0
                    name: skip
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/components_tree/tree:
          put:
               tags:
               - admin/tool_adm
               summary: Get Tools Dir
               operationId: get_tools_dir_api_admin_tool_adm_components_tree_tree_put
               parameters:
               -    required: false
                    schema:
                         title: Skip
                         type: integer
                         default: 0
                    name: skip
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Query Sets
                                   type: object
                                   default: {}
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/tool_adm
               summary: Post Tools Dir
               operationId: post_tools_dir_api_admin_tool_adm_components_tree_tree_post
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/ToolsTreeSchema'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/components_tree/dir:
          get:
               tags:
               - admin/tool_adm
               summary: Get Tools Dir
               operationId: get_tools_dir_api_admin_tool_adm_components_tree_dir_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/components_tree/tree/{dir_name}:
          put:
               tags:
               - admin/tool_adm
               summary: Update Component Tree
               operationId: update_component_tree_api_admin_tool_adm_components_tree_tree__dir_name__put
               parameters:
               -    required: true
                    schema:
                         title: Dir Name
                         type: string
                    name: dir_name
                    in: path
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Update Set
                                   type: object
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/tool_adm/components_tree/tree/{tools_id}:
          delete:
               tags:
               - admin/tool_adm
               summary: Delete Tools Dir
               operationId: delete_tools_dir_api_admin_tool_adm_components_tree_tree__tools_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Tools Id
                         type: string
                    name: tools_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/user_adm/roles/:
          get:
               tags:
               - admin/user_adm/roles
               summary: RoleLists
               operationId: read_roles_api_admin_user_adm_roles__get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/user_adm/roles
               summary: Role creation
               operationId: create_role_api_admin_user_adm_roles__post
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/RoleCreateSchema'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/RoleSchema'
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/user_adm/roles/{role_id}:
          get:
               tags:
               - admin/user_adm/roles
               summary: Role Details
               operationId: read_role_api_admin_user_adm_roles__role_id__get
               parameters:
               -    required: true
                    schema:
                         title: Role Id
                         type: string
                    name: role_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/RoleSchema'
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - admin/user_adm/roles
               summary: Role update
               operationId: update_role_api_admin_user_adm_roles__role_id__put
               parameters:
               -    required: true
                    schema:
                         title: Role Id
                         type: string
                    name: role_id
                    in: path
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/RoleUpdateSchema'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/RoleSchema'
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - admin/user_adm/roles
               summary: Role deletion
               description: Role deletionHour，Of the associated user role Empty fields
               operationId: delete_role_api_admin_user_adm_roles__role_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Role Id
                         type: string
                    name: role_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/user_adm/users/:
          get:
               tags:
               - admin/user_adm/users
               summary: userLists
               description: Retrieve users.
               operationId: read_users_api_admin_user_adm_users__get
               parameters:
               -    required: false
                    schema:
                         title: Q
                         type: string
                    name: q
                    in: query
               -    required: false
                    schema:
                         title: Role
                         type: string
                    name: role
                    in: query
               -    required: false
                    schema:
                         title: Is Active
                         anyOf:
                         -    type: boolean
                         -    type: string
                         default: ''
                    name: is_active
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/user_adm/users
               summary: User creation
               description: Create new user.
               operationId: create_user_api_admin_user_adm_users__post
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_create_user_api_admin_user_adm_users__post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/admin/user_adm/users/{user_id}:
          get:
               tags:
               - admin/user_adm/users
               summary: User details
               description: Retrieve user
               operationId: read_user_api_admin_user_adm_users__user_id__get
               parameters:
               -    required: true
                    schema:
                         title: User Id
                         type: string
                    name: user_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - admin/user_adm/users
               summary: User updates
               description: "The current user（doforAdministrator）Change other users（It could be yourself）Status information of:\n    - is_active\n  \
                    \  - role"
               operationId: update_user_api_admin_user_adm_users__user_id__put
               parameters:
               -    required: true
                    schema:
                         title: User Id
                         type: string
                    name: user_id
                    in: path
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_update_user_api_admin_user_adm_users__user_id__put'
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - admin/user_adm/users
               summary: User deletion
               description: '    '
               operationId: delete_user_api_admin_user_adm_users__user_id__delete
               parameters:
               -    required: true
                    schema:
                         title: User Id
                         type: string
                    name: user_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/audit/audit/enumerate:
          put:
               tags:
               - admin/audit
               summary: Update Audit Enumerate
               operationId: update_audit_enumerate_api_admin_audit_audit_enumerate_put
               parameters:
               -    required: true
                    schema:
                         title: Audit Type
                         type: string
                    name: audit_type
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/audit
               summary: Create Audit Enumerate
               operationId: create_audit_enumerate_api_admin_audit_audit_enumerate_post
               parameters:
               -    required: true
                    schema:
                         title: Audit Type
                         type: string
                    name: audit_type
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - admin/audit
               summary: Delete Audit Enumerate
               operationId: delete_audit_enumerate_api_admin_audit_audit_enumerate_delete
               parameters:
               -    required: true
                    schema:
                         title: Enumerate Id
                         type: string
                    name: enumerate_id
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/audit/audit:
          get:
               tags:
               - admin/audit
               summary: Resource Audit
               operationId: resource_audit_api_admin_audit_audit_get
               parameters:
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Audit Result
                         type: string
                    name: audit_result
                    in: query
               -    required: false
                    schema:
                         title: Audit Type
                         type: string
                    name: audit_type
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/storage:
          get:
               tags:
               - admin/res_adm
               summary: Storage resource management
               operationId: storage_resource_api_admin_res_adm_storage_get
               parameters:
               -    required: false
                    schema:
                         title: Content
                         type: string
                    name: content
                    in: query
               -    required: false
                    schema:
                         title: User Role
                         type: string
                    name: user_role
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - admin/res_adm
               summary: Individual users store resource modifications
               operationId: storage_resource_update_api_admin_res_adm_storage_put
               parameters:
               -    required: true
                    schema:
                         title: Storage Id
                         type: string
                    name: storage_id
                    in: query
               -    required: true
                    schema:
                         title: Allocated Storage Size
                         type: integer
                    name: allocated_storage_size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/res_adm
               summary: Storage resource allocation
               operationId: storage_resource_create_api_admin_res_adm_storage_post
               parameters:
               -    required: true
                    schema:
                         title: User Id
                         type: string
                    name: user_id
                    in: query
               -    required: true
                    schema:
                         title: Allocated Storage Size
                         type: integer
                    name: allocated_storage_size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/storage/allocated/role:
          post:
               tags:
               - admin/res_adm
               summary: Storage resource management, Storage resources allocated to roles
               description: 'ExistingtheStorage resource allocationExistingRoleExistingtheExisting </br>

                    :param role_id: Roleid</br>

                    :param allocated_storage_size: Authorized usage of resources</br>

                    :return:'
               operationId: storage_allocated_creat_api_admin_res_adm_storage_allocated_role_post
               parameters:
               -    required: true
                    schema:
                         title: Role Id
                         type: string
                    name: role_id
                    in: query
               -    required: true
                    schema:
                         title: Allocated Storage Size
                         type: integer
                    name: allocated_storage_size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/storage/newcomer:
          get:
               tags:
               - admin/res_adm
               summary: Gets the default allocated storage for the current new user
               operationId: get_newcomer_storage_api_admin_res_adm_storage_newcomer_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/res_adm
               summary: New users are assigned storage Settings by default
               operationId: set_newcomer_storage_api_admin_res_adm_storage_newcomer_post
               parameters:
               -    required: true
                    schema:
                         title: Allocated Storage Size
                         type: integer
                    name: allocated_storage_size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/quota/newcomer:
          get:
               tags:
               - admin/res_adm
               summary: Gets the default quota allocated for the current new user
               operationId: get_newcomer_storage_api_admin_res_adm_quota_newcomer_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/res_adm
               summary: Default quota setting for new users
               operationId: set_newcomer_quota_api_admin_res_adm_quota_newcomer_post
               parameters:
               -    required: true
                    schema:
                         title: Allocated Storage Size
                         type: integer
                    name: allocated_storage_size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/computing_quota:
          get:
               tags:
               - admin/res_adm
               summary: Get the quota conversion calculation resource rules
               operationId: get_computing_quota_api_admin_res_adm_computing_quota_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/res_adm
               summary: Modify the quota conversion calculation resource rules
               operationId: update_computing_quota_api_admin_res_adm_computing_quota_post
               parameters:
               -    required: false
                    schema:
                         title: Cpu Quota
                         type: number
                    name: cpu_quota
                    in: query
               -    required: false
                    schema:
                         title: Cpu Unit Measurement
                         type: string
                    name: cpu_unit_measurement
                    in: query
               -    required: false
                    schema:
                         title: Memory Quota
                         type: number
                    name: memory_quota
                    in: query
               -    required: false
                    schema:
                         title: Memory Unit Measurement
                         type: string
                    name: memory_unit_measurement
                    in: query
               -    required: false
                    schema:
                         title: Gpu Quota
                         type: number
                    name: gpu_quota
                    in: query
               -    required: false
                    schema:
                         title: Gpu Unit Measurement
                         type: string
                    name: gpu_unit_measurement
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/storage_quota:
          get:
               tags:
               - admin/res_adm
               summary: Get the quota conversion storage rule
               operationId: get_storage_quota_api_admin_res_adm_storage_quota_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/res_adm
               summary: Modify the quota conversion storage rule
               operationId: update_storage_quota_api_admin_res_adm_storage_quota_post
               parameters:
               -    required: false
                    schema:
                         title: Quota
                         type: integer
                    name: quota
                    in: query
               -    required: false
                    schema:
                         title: Storage Unit Measurement
                         type: string
                    name: storage_unit_measurement
                    in: query
               -    required: false
                    schema:
                         title: Enable
                         type: boolean
                    name: enable
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/quota:
          post:
               tags:
               - admin/res_adm
               summary: Quota flow details
               operationId: quota_statement_api_admin_res_adm_quota_post
               parameters:
               -    required: false
                    schema:
                         title: Statement Id
                         type: string
                    name: statement_id
                    in: query
               -    required: false
                    schema:
                         title: User
                         type: string
                    name: user
                    in: query
               -    required: false
                    schema:
                         title: Email
                         type: string
                    name: email
                    in: query
               -    required: false
                    schema:
                         title: Organization
                         type: string
                    name: organization
                    in: query
               -    required: false
                    schema:
                         title: Statement Type
                         type: string
                    name: statement_type
                    in: query
               -    required: false
                    schema:
                         title: Begin Time
                         type: string
                    name: begin_time
                    in: query
               -    required: false
                    schema:
                         title: End Time
                         type: string
                    name: end_time
                    in: query
               -    required: false
                    schema:
                         title: Order By
                         type: string
                    name: order_by
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/init_storage:
          post:
               tags:
               - admin/res_adm
               summary: Init Platform Resource
               operationId: init_platform_resource_api_admin_res_adm_init_storage_post
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/init_quota:
          post:
               tags:
               - admin/res_adm
               summary: Init Platform Quota
               operationId: init_platform_quota_api_admin_res_adm_init_quota_post
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/jsj:
          get:
               tags:
               - admin/res_adm
               summary: Create Fake Data
               operationId: create_fake_data_api_admin_res_adm_jsj_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/quota/users:
          get:
               tags:
               - admin/res_adm
               summary: Search Users Quota
               operationId: search_users_quota_api_admin_res_adm_quota_users_get
               parameters:
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/quota/allocation/role:
          post:
               tags:
               - admin/res_adm
               summary: according toRoleaccording to
               operationId: allocation_quota_by_role_api_admin_res_adm_quota_allocation_role_post
               parameters:
               -    required: true
                    schema:
                         title: Role Id
                         type: string
                    name: role_id
                    in: query
               -    required: false
                    schema:
                         title: Quota
                         type: number
                    name: quota
                    in: query
               -    required: false
                    schema:
                         title: Reset
                         type: number
                    name: reset
                    in: query
               -    required: false
                    schema:
                         title: Remark
                         type: string
                    name: remark
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/quota/allocation/user:
          post:
               tags:
               - admin/res_adm
               summary: Batch allocation quota
               operationId: allocation_quota_by_user_api_admin_res_adm_quota_allocation_user_post
               parameters:
               -    required: false
                    schema:
                         title: Quota
                         type: number
                    name: quota
                    in: query
               -    required: false
                    schema:
                         title: Reset
                         type: number
                    name: reset
                    in: query
               -    required: false
                    schema:
                         title: Remark
                         type: string
                    name: remark
                    in: query
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Users
                                   type: array
                                   items: {}
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/data/:
          get:
               tags:
               - admin/res_adm/data
               summary: Access to open data
               operationId: get_public_data_api_admin_res_adm_data__get
               parameters:
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - admin/res_adm/data
               summary: Modifying public data
               operationId: update_public_data_metadata_api_admin_res_adm_data__put
               parameters:
               -    required: true
                    schema:
                         title: Dataset Id
                         type: string
                    name: dataset_id
                    in: query
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Label
                         type: string
                    name: label
                    in: query
               -    required: false
                    schema:
                         title: Data Type
                         type: string
                    name: data_type
                    in: query
               -    required: false
                    schema:
                         title: Description
                         type: string
                    name: description
                    in: query
               -    required: false
                    schema:
                         title: Access
                         type: string
                    name: access
                    in: query
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_update_public_data_metadata_api_admin_res_adm_data__put'
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/res_adm/data
               summary: Creating public Data
               operationId: create_public_data_api_admin_res_adm_data__post
               parameters:
               -    required: true
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: true
                    schema:
                         title: Label
                         type: string
                    name: label
                    in: query
               -    required: true
                    schema:
                         title: Description
                         type: string
                    name: description
                    in: query
               -    required: true
                    schema:
                         title: Data Type
                         type: string
                    name: data_type
                    in: query
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_create_public_data_api_admin_res_adm_data__post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - admin/res_adm/data
               summary: Deleting Public Data
               operationId: delete_public_data_api_admin_res_adm_data__delete
               parameters:
               -    required: true
                    schema:
                         title: Dataset Id
                         type: string
                    name: dataset_id
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/data/options:
          get:
               tags:
               - admin/res_adm/data
               summary: Whether public dataset state access is open to users
               operationId: public_option_api_admin_res_adm_data_options_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/res_adm/data
               summary: Whether to make public datasets available to users
               operationId: public_option_api_admin_res_adm_data_options_post
               parameters:
               -    required: true
                    schema:
                         title: Option
                         type: boolean
                    name: option
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/data/data:
          get:
               tags:
               - admin/res_adm/data
               summary: Access to open dataSubsettheSubsetfile
               operationId: get_public_file_api_admin_res_adm_data_data_get
               parameters:
               -    required: true
                    schema:
                         title: Dataset Id
                         type: string
                    name: dataset_id
                    in: query
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: File Extension
                         type: string
                    name: file_extension
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - admin/res_adm/data
               summary: Upload the data file to the public dataset
               operationId: add_dataset_file_api_admin_res_adm_data_data_post
               parameters:
               -    required: true
                    schema:
                         title: Dataset Id
                         type: string
                    name: dataset_id
                    in: query
               -    required: false
                    schema:
                         title: Description
                         type: string
                         default: ''
                    name: description
                    in: query
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_add_dataset_file_api_admin_res_adm_data_data_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/data/datasets:
          post:
               tags:
               - admin/res_adm/data
               summary: Creating public DataUnder the sourcetheUnder the source
               operationId: create_datasets_from_source_api_admin_res_adm_data_datasets_post
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_create_datasets_from_source_api_admin_res_adm_data_datasets_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/data/datasets/upload_file:
          post:
               tags:
               - admin/res_adm/data
               summary: Upload the data file to the dataset under the public data source
               operationId: upload_big_file_api_admin_res_adm_data_datasets_upload_file_post
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_upload_big_file_api_admin_res_adm_data_datasets_upload_file_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/data/datasets/merge_file:
          post:
               tags:
               - admin/res_adm/data
               summary: Merge File
               operationId: merge_file_api_admin_res_adm_data_datasets_merge_file_post
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_merge_file_api_admin_res_adm_data_datasets_merge_file_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/data/datasets/{datasets_id}:
          get:
               tags:
               - admin/res_adm/data
               summary: Get the data file under the dataset
               operationId: get_datasets_file_api_admin_res_adm_data_datasets__datasets_id__get
               parameters:
               -    required: true
                    schema:
                         title: Dataset Id
                         type: string
                    name: dataset_id
                    in: query
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: File Extension
                         type: string
                    name: file_extension
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - admin/res_adm/data
               summary: Change the dataset information
               operationId: get_datasets_file_api_admin_res_adm_data_datasets__datasets_id__put
               parameters:
               -    required: true
                    schema:
                         title: Dataset Id
                         type: string
                    name: dataset_id
                    in: query
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Description
                         type: string
                    name: description
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/data/instdb:
          post:
               tags:
               - admin/res_adm/data
               summary: InstDBInteroperate to obtain data set information
               operationId: instdb_link_api_admin_res_adm_data_instdb_post
               parameters:
               -    required: true
                    schema:
                         title: Url
                         type: string
                    name: url
                    in: query
               -    required: true
                    schema:
                         title: Secret Key
                         type: string
                    name: secret_key
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/datainstdb:
          put:
               tags:
               - admin/res_adm/data
               summary: Select ImportInstDBWhich datasets?,Passed into the datasetid
               operationId: instdb_link_api_admin_res_adm_datainstdb_put
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Datasets Id
                                   type: array
                                   items: {}
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/data/datasets/{dataset_id}:
          delete:
               tags:
               - admin/res_adm/data
               summary: Delete the data set under the data source
               operationId: delete_source_datasets_api_admin_res_adm_data_datasets__dataset_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Dataset Id
                         type: string
                    name: dataset_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/res_adm/data/datasets/{datasets_id}/{file_id}:
          delete:
               tags:
               - admin/res_adm/data
               summary: Delete the data set under the data sourceinthefile
               operationId: delete_source_datasets_file_api_admin_res_adm_data_datasets__datasets_id___file_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Datasets Id
                         type: string
                    name: datasets_id
                    in: path
               -    required: true
                    schema:
                         title: File Id
                         type: string
                    name: file_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/microservices/services:
          get:
               tags:
               - admin/microservices
               summary: alreadynotealreadyLists
               operationId: get_microservices_api_admin_microservices_services_get
               parameters:
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/microservices/integration/server:
          post:
               tags:
               - admin/microservices
               summary: Service integration
               operationId: integration_server_api_admin_microservices_integration_server_post
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_integration_server_api_admin_microservices_integration_server_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/microservices/integration/software:
          post:
               tags:
               - admin/microservices
               summary: softwareService integration
               operationId: integration_software_service_api_admin_microservices_integration_software_post
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/microservices/offline/{service_id}:
          delete:
               tags:
               - admin/microservices
               summary: Remove an integrated service
               operationId: delete_cluster_microservices_api_admin_microservices_offline__service_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Service Id
                         type: string
                    name: service_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/admin/microservices/update/service/{service_id}:
          put:
               tags:
               - admin/microservices
               summary: Modify the service metadata
               operationId: update_service_metadata_api_admin_microservices_update_service__service_id__put
               parameters:
               -    required: true
                    schema:
                         title: Service Id
                         type: string
                    name: service_id
                    in: path
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_update_service_metadata_api_admin_microservices_update_service__service_id__put'
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/analyses/:
          get:
               tags:
               - analyses
               summary: List of analyses
               description: ':param is_trial:

                    :param name:

                    :param creator:

                    :param skeleton_id:

                    :param state:

                    :param page:

                    :param size:

                    :param sort:

                    :param current_user:

                    :return:'
               operationId: read_analyses_api_analyses__get
               parameters:
               -    required: false
                    schema:
                         title: Is Trial
                         type: boolean
                    name: is_trial
                    in: query
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Creator
                         type: string
                    name: creator
                    in: query
               -    required: false
                    schema:
                         title: Skeleton Id
                         type: string
                    name: skeleton_id
                    in: query
               -    required: false
                    schema:
                         title: State
                         type: string
                    name: state
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               -    required: false
                    schema:
                         title: Sort
                         type: string
                         default: desc
                    name: sort
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - analyses
               summary: Analysis creation
               description: 'note：Because it involves a trial run，Therefore, no verification is required Skeleton state


                    :param createSchema:

                    :param current_user:

                    :return:'
               operationId: create_analysis_api_analyses__post
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/Analysis2CreateSchema'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/analyses/{analysis_id}:
          get:
               tags:
               - analyses
               summary: Analysis details
               description: ':param analysis_id:

                    :param current_user:

                    :return:'
               operationId: read_analysis_api_analyses__analysis_id__get
               parameters:
               -    required: true
                    schema:
                         title: Analysis Id
                         type: string
                    name: analysis_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - analyses
               summary: Analysis editor
               description: ':param analysis_id:

                    :param update:

                    :param current_user:

                    :return:'
               operationId: update_analysis_api_analyses__analysis_id__put
               parameters:
               -    required: true
                    schema:
                         title: Analysis Id
                         type: string
                    name: analysis_id
                    in: path
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/Analysis2UpdateSchema'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - analyses
               summary: Analyze deletion
               description: ':param analysis_id:

                    :param current_user:

                    :return:'
               operationId: delete_analysis_api_analyses__analysis_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Analysis Id
                         type: string
                    name: analysis_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/datasets/file/upload:
          post:
               tags:
               - datasets
               summary: Data file upload
               description: Uploading data files
               operationId: upload_dataset_file_api_datasets_file_upload_post
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_upload_dataset_file_api_datasets_file_upload_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/datasets/folder/upload:
          post:
               tags:
               - datasets
               summary: Data folder upload
               description: "Uploading data filesClip\n\nlogic：\n    - Front-end：Compress folders，Upload the zip file\n    - Backend：Decompress the compressed package，And will\
                    \ dir Information writing DataFileSystem    （Know dir The path information is sufficient，Subsequent displays can be positioned dir the children）"
               operationId: upload_dataset_folder_api_datasets_folder_upload_post
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_upload_dataset_folder_api_datasets_folder_upload_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/datasets/folder/create:
          post:
               tags:
               - datasets
               summary: Create Dataset Folder
               description: 'Creating folders（for Analysis sets the output path）


                    :param name:

                    :param parent: Parent directory

                    :param current_user:

                    :return:'
               operationId: create_dataset_folder_api_datasets_folder_create_post
               parameters:
               -    required: true
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Parent
                         type: string
                    name: parent
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/datasets/download:
          get:
               tags:
               - datasets
               summary: Data download
               description: 'file：Direct download

                    fileClip：After minifying and packing，Download


                    :param dataset_id:

                    :param current_user:

                    :return:'
               operationId: download_dataset_api_datasets_download_get
               parameters:
               -    required: true
                    schema:
                         title: Dataset Id
                         type: string
                    name: dataset_id
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/datasets/:
          get:
               tags:
               - datasets
               summary: dataLists
               description: 'dataLists


                    :param q:

                    :param is_dir:

                    :param page:

                    :param size:

                    :param current_user:

                    :return:'
               operationId: read_datasets_api_datasets__get
               parameters:
               -    required: false
                    schema:
                         title: Q
                         type: string
                    name: q
                    in: query
               -    required: false
                    schema:
                         title: Is Dir
                         type: boolean
                    name: is_dir
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/datasets/{dataset_id}:
          get:
               tags:
               - datasets
               summary: Data Details
               description: Data Details
               operationId: read_dataset_api_datasets__dataset_id__get
               parameters:
               -    required: true
                    schema:
                         title: Dataset Id
                         type: string
                    name: dataset_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - datasets
               summary: Metadata updates
               description: updateData Details
               operationId: update_dataset_api_datasets__dataset_id__put
               parameters:
               -    required: true
                    schema:
                         title: Dataset Id
                         type: string
                    name: dataset_id
                    in: path
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/DatasetUpdateSchema'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - datasets
               summary: Data deletion
               description: Data deletion（logicDelete）
               operationId: delete_dataset_api_datasets__dataset_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Dataset Id
                         type: string
                    name: dataset_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/datasets/iterdir/{id}:
          get:
               tags:
               - datasets
               summary: traversaldatafiledata
               description: 'According to id and data_path，traversal data_path，Return to the subordinate（Level 1 only）the files/folders


                    :param id:

                    :param data_path:

                    :param is_dir:

                    :param current_user:

                    :return:'
               operationId: iterdir_dataset_api_datasets_iterdir__id__get
               parameters:
               -    required: true
                    schema:
                         title: Id
                         type: string
                    name: id
                    in: path
               -    required: true
                    schema:
                         title: Data Path
                         type: string
                    name: data_path
                    in: query
               -    required: false
                    schema:
                         title: Is Dir
                         type: boolean
                    name: is_dir
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/datasets_s3/file/upload:
          post:
               tags:
               - datasets
               summary: Data file upload
               description: "Uploading data files, Store toThe current userthe bucket Within the：\n    - bucket_name = current_user.id\n\
                    \    - repeatthefile，Direct coverage"
               operationId: upload_dataset_file_api_datasets_s3_file_upload_post
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_upload_dataset_file_api_datasets_s3_file_upload_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/datasets_s3/folder/upload:
          post:
               tags:
               - datasets
               summary: Data folder upload
               description: "Uploading data filesClip\n\nlogic：\n    - （Front-end）Compress folders，ClipafterUpload the zip file\n    - ClipDecompress the compressed packageClipcorrespondenceCliptheClip\n\
                    \        - After uploading,，Need to be removed\n        - minio If there are duplicate namesfile，If there are duplicate namesDirect coverage\n    - If there are duplicate namestraversalfileIf there are duplicate names，Checking if is\
                    \ file：\n        - YES: Splice path，And then upload it\n        - NO： Splice pathafter，Keep iterating, continue\n\
                    \    - Only addfileOnly addthe root Information writing DataFileSystem    （Hierarchical relationship，Only addAccording to minio the path\
                    \ To iterate through each level）"
               operationId: upload_dataset_folder_api_datasets_s3_folder_upload_post
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_upload_dataset_folder_api_datasets_s3_folder_upload_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/datasets_s3/:
          get:
               tags:
               - datasets
               summary: dataLists
               description: 'Obtaining experimental data

                    :param name:

                    :param file_extension: fileTypesClassification

                    :param deps: depth

                    :param current_user:

                    :return:'
               operationId: read_datasets_api_datasets_s3__get
               parameters:
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: File Extension
                         type: string
                    name: file_extension
                    in: query
               -    required: false
                    schema:
                         title: Deps
                         type: integer
                         default: 0
                    name: deps
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/experiments/:
          get:
               tags:
               - experiments
               summary: List of experiments (Trial run experiments are not included)
               description: 'NOTE： Experiments during the trial run are not shown (is_trial=True)


                    :param is_shared:

                    :param name:

                    :param creator:

                    :param page:

                    :param size:

                    :param sort:

                    :param current_user:

                    :return:'
               operationId: read_experiments_api_experiments__get
               parameters:
               -    required: false
                    schema:
                         title: Is Shared
                         type: boolean
                    name: is_shared
                    in: query
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Creator
                         type: string
                    name: creator
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               -    required: false
                    schema:
                         title: Sort
                         type: string
                         default: desc
                    name: sort
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - experiments
               summary: Experiment Creation
               operationId: create_experiment_api_experiments__post
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/ExperimentBaseSchema'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/ExperimentInDBSchema'
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - experiments
               summary: Experiment deletion（Batch size）
               operationId: delete_experiments_api_experiments__delete
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/ExperimentBatchDeleteSchema'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/experiments/{expt_id}:
          get:
               tags:
               - experiments
               summary: Details of the experiment
               operationId: read_experiment_api_experiments__expt_id__get
               parameters:
               -    required: true
                    schema:
                         title: Expt Id
                         type: string
                    name: expt_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - experiments
               summary: Experimental modifications
               operationId: update_experiment_api_experiments__expt_id__put
               parameters:
               -    required: true
                    schema:
                         title: Expt Id
                         type: string
                    name: expt_id
                    in: path
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/ExperimentUpdateSchema'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/ExperimentInDBSchema'
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - experiments
               summary: Experiment deletion
               operationId: delete_experiment_api_experiments__expt_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Expt Id
                         type: string
                    name: expt_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/experiments/copy/{expt_id}:
          post:
               tags:
               - experiments
               summary: Replication of experiments
               description: "Replication of experiments：\n\n    - Name of experiment： experiment -> experiment_copy\n\
                    \    - Step replication：\n        - task New： user for current_user\n       \
                    \ - Based on the samethe tool\n        - inputs：Copying variable names + Parameter values data\n        - outputs：Based on the sameCopying variable names，Not copying values\
                    \ data\n\n:param expt_id:\n:param current_user:\n:return:"
               operationId: copy_experiment_api_experiments_copy__expt_id__post
               parameters:
               -    required: true
                    schema:
                         title: Expt Id
                         type: string
                    name: expt_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/ExperimentInDBSchema'
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/experiments/share/{expt_id}:
          post:
               tags:
               - experiments
               summary: Experiment Sharing
               description: 'Experiment Sharing


                    :param expt_id:

                    :param to_user:

                    :param current_user:

                    :return:'
               operationId: share_experiment_api_experiments_share__expt_id__post
               parameters:
               -    required: true
                    schema:
                         title: Expt Id
                         type: string
                    name: expt_id
                    in: path
               -    required: true
                    schema:
                         title: To User
                         type: string
                    name: to_user
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/ExperimentInDBSchema'
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/index/skeletons/:
          get:
               tags:
               - index
               summary: List of analysis tools
               description: 'List of analysis tools（Front desk）


                    :param background_tasks:

                    :param name:

                    :param category:

                    :param page:

                    :param size:

                    :return:'
               operationId: read_skeletons_api_index_skeletons__get
               parameters:
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Category
                         type: string
                    name: category
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/index/skeletons/detail:
          get:
               tags:
               - index
               summary: Analysis Tool Details
               description: ':param skeleton_id:

                    :param user_id:

                    :return:'
               operationId: read_skeleton_api_index_skeletons_detail_get
               parameters:
               -    required: true
                    schema:
                         title: Skeleton Id
                         type: string
                    name: skeleton_id
                    in: query
               -    required: false
                    schema:
                         title: User Id
                         type: string
                    name: user_id
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/index/skeletons/aggs:
          get:
               tags:
               - index
               summary: Analysis tool category statistics
               description: 'List of analysis tools（Front desk）


                    :return:'
               operationId: read_skeletons_aggs_api_index_skeletons_aggs_get
               parameters:
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/roles/:
          get:
               tags:
               - roles
               summary: RoleLists
               operationId: read_roles_api_roles__get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema:
                                        title: Response Read Roles Api Roles  Get
                                        type: array
                                        items:
                                             $ref: '#/components/schemas/RoleBaseSchema'
     /api/skeletons/:
          get:
               tags:
               - skeletons
               summary: List of analysis tools
               description: ':param background_tasks:

                    :param name:

                    :param user_name:

                    :param state:

                    :param is_online:

                    :param page:

                    :param size:

                    :param current_user:

                    :return:'
               operationId: read_skeletons_api_skeletons__get
               parameters:
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: User Name
                         type: string
                    name: user_name
                    in: query
               -    required: false
                    schema:
                         title: State
                         type: string
                    name: state
                    in: query
               -    required: false
                    schema:
                         title: Is Online
                         type: boolean
                    name: is_online
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - skeletons
               summary: Analysis tool creation
               description: ':param skeletonCreateSchema:

                    :param current_user:

                    :return: ref: `SkeletonSchema`'
               operationId: create_skeleton_api_skeletons__post
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/Skeleton2CreateSchema'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/skeletons/{skeleton_id}:
          get:
               tags:
               - skeletons
               summary: Analysis Tool Details
               description: ':param skeleton_id:

                    :param current_user:

                    :return:'
               operationId: read_skeleton_api_skeletons__skeleton_id__get
               parameters:
               -    required: true
                    schema:
                         title: Skeleton Id
                         type: string
                    name: skeleton_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - skeletons
               summary: Analysis tool removal
               description: "- Delete Skeleton\n\n-Tool Publisher，YesDeleteYestheYes：\n    - Judgment state，Yesthe，YesDelete\n\
                    \        - Not reviewed：UNAPPROVED\n        - Failed to pass the audit： DISAPPROVED\n    （Once approved,，whetherGo online/Go offline，whetherDeletewhether）\n\
                    \n- Administrator，YesDeleteYestheYes：\n    - Judgment is_online\n        - True： YesDelete\n\
                    \        - False： YesDelete\n\n:param skeleton_id:\n:param current_user:\n\
                    :return:"
               operationId: delete_skeleton_api_skeletons__skeleton_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Skeleton Id
                         type: string
                    name: skeleton_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/skeletons/optional_inputs/{skeleton_id}/:
          get:
               tags:
               - skeletons
               summary: Analysis tool input item optional data
               description: ':param skeleton_id:

                    :param input_id:

                    :param q:

                    :param page:

                    :param size:

                    :param current_user:

                    :return:'
               operationId: read_skeleton_optional_inputs_api_skeletons_optional_inputs__skeleton_id___get
               parameters:
               -    required: true
                    schema:
                         title: Skeleton Id
                         type: string
                    name: skeleton_id
                    in: path
               -    required: true
                    schema:
                         title: Input Id
                         type: string
                    name: input_id
                    in: query
               -    required: false
                    schema:
                         title: Q
                         type: string
                    name: q
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 5
                    name: size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/skeletons/intro/{skeleton_id}:
          put:
               tags:
               - skeletons
               summary: Analysis tool updates-Description information
               description: ':param skeleton_id:

                    :param update_form:

                    :param current_user:

                    :return:'
               operationId: update_skeleton_intro_api_skeletons_intro__skeleton_id__put
               parameters:
               -    required: true
                    schema:
                         title: Skeleton Id
                         type: string
                    name: skeleton_id
                    in: path
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_update_skeleton_intro_api_skeletons_intro__skeleton_id__put'
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/skeletons/config/{skeleton_id}:
          put:
               tags:
               - skeletons
               summary: Analysis tool updates-Configuration items
               description: ':param skeleton_id:

                    :param skeleton_update:

                    :param current_user:

                    :return:'
               operationId: update_skeleton_config_api_skeletons_config__skeleton_id__put
               parameters:
               -    required: true
                    schema:
                         title: Skeleton Id
                         type: string
                    name: skeleton_id
                    in: path
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/Skeleton2UpdateSchema'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/skeletons/audit/{skeleton_id}:
          post:
               tags:
               - skeletons
               summary: The analysis tool was submitted for review
               description: 'toolthetool，Submit analysis tools for review


                    :param skeleton_id:

                    :param current_user:

                    :return:'
               operationId: create_skeleton_audit_api_skeletons_audit__skeleton_id__post
               parameters:
               -    required: true
                    schema:
                         title: Skeleton Id
                         type: string
                    name: skeleton_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/tasks/:
          get:
               tags:
               - tasks
               summary: ExperimentComponentstaskLists
               operationId: read_tasks_api_tasks__get
               parameters:
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - tasks
               summary: Experiment component task creation
               operationId: create_task_api_tasks__post
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/ToolTaskCreateSchema'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/ToolTaskCreatedSchema'
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/tasks/{task_id}:
          get:
               tags:
               - tasks
               summary: Experimental component task details
               operationId: read_task_api_tasks__task_id__get
               parameters:
               -    required: true
                    schema:
                         title: Task Id
                         type: string
                    name: task_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - tasks
               summary: Experimental component task modification
               operationId: update_task_api_tasks__task_id__put
               parameters:
               -    required: true
                    schema:
                         title: Task Id
                         type: string
                    name: task_id
                    in: path
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/ToolTaskUpdateSchema'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - tasks
               summary: ExperimentComponentstaskDelete
               operationId: delete_task_api_tasks__task_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Task Id
                         type: string
                    name: task_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/toolsource/zipfiles/upload:
          post:
               tags:
               - toolsource
               summary: Operator compression package(zipFormat)Upload
               description: UploadInclusion operatortheInclusion operator  (FormatInclusion operator zip)
               operationId: upload_zipfiles_api_toolsource_zipfiles_upload_post
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_upload_zipfiles_api_toolsource_zipfiles_upload_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/tools/:
          get:
               tags:
               - tools
               summary: ComponentsLists
               operationId: read_tools_api_tools__get
               parameters:
               -    required: false
                    schema:
                         title: State
                         anyOf:
                         -    type: boolean
                         -    type: string
                         default: ''
                    name: state
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/tools/{tool_id}:
          get:
               tags:
               - tools
               summary: Component Details
               operationId: read_tool_api_tools__tool_id__get
               parameters:
               -    required: true
                    schema:
                         title: Tool Id
                         type: string
                    name: tool_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/ui/platform:
          get:
               tags:
               - ui
               summary: Platform Configuration Details
               operationId: read_platform_api_ui_platform_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
     /api/ui/indexui:
          get:
               tags:
               - ui
               summary: Home Configuration Details
               operationId: read_indexui_api_ui_indexui_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
     /api/ui/experimentui:
          get:
               tags:
               - ui
               summary: Experiment page configuration details
               operationId: read_experimentui_api_ui_experimentui_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
     /api/ui/skeletonui:
          get:
               tags:
               - ui
               summary: Profiling tool page configuration details
               operationId: read_skeletonui_api_ui_skeletonui_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
     /api/umt/callback/:
          get:
               tags:
               - umt
               summary: Tech Cloud authentication callback
               description: "This interfacefor umt This interfacetheThis interface，namely redirect_URI， Used of accepting. authorization\
                    \ code.\nGet hold of authorization code after，In the applicationafterIn the applicationAccording toIn the application URI To get a pass Access_Token：\n\
                    \    - https://passport.escience.cn/oauth2/token\n        - Submission method：POST\n\
                    \            Conten-Type: application/x-www-form-urlencoded\n\
                    \        - The submission parameters are:\n            client_id: YOUR_CLIENT_ID   //Client side\
                    \ ID\n            client_secret: YOUR_CLIENT_SECRET\n        \
                    \    grant_type:authorization_code   //Fixed value\n            redirect_uri:\
                    \ YOUR_REGISTERED_REDIRECT_URI  //In the application formtheIn the application form\n            code:code\
                    \   //In the second step, it is transmitted back code thevalue， notevalueforvalue，codevalue.value code Visit this link several times\n\
                    \n    - Complete the authentication and obtain the authentication return value.Complete the authentication and obtain the authentication return valueParameter valuesComplete the authentication and obtain the authentication return valuefor：\n        {\n            \"access_token\"\
                    :  \"SlAV32hkKG\",\n            \"expires_in\":  3600,\n     \
                    \       “refresh_token:  ”ASAEDFIkie876”,\n            ”userInfo”:\
                    \ {\n                “umtId”:  12,\n                 “truename”:\
                    \  ”yourName”,\n                ” type”:  ”umtauth”,\n       \
                    \         ”securityEmail”: ” securityEmail”,\n               \
                    \ ”cstnetIdStatus”: ”cstnetIdStatus”,\n                ”cstnetId”:\
                    \ ”yourEmail”,\n                “passwordType”:” password_umt”,\n\
                    \                ”secondaryEmails”:[“youremail1”, “youremail2”]\n\
                    \            }   //notemeaning，meaningformeaning，userInfo meaningfor json Structure，meaningfor json\
                    \ String（By double quotes\"\"Carry out the parcel）Types，Need to be converted to json Objectsafterapply.\n        }\n\n        \
                    \ Parameter Description：\n            umtId：correspondence umt insidethe id No.\n            truename：User's real name\n\
                    \            type：Scope of account umt,coremail,uc\n            securityEmail：Confidential email address\n\
                    \            cstnetIdStatus：Master account activation status，namelyEmail verification status， Optional values： active-Activated，\
                    \ temp-not active.not activeAccording tonot activeJudgmentnot active.\n            passwordType: not activethenot activeTypes\n\
                    \            cstnetId：User's primary email address\n            secondaryEmails：Auxiliary Mailbox Mailbox，Setting up auxiliary email is temporarily closedthe\
                    \ api\n\n    When requesting access token endpoint: https://passport.escience.cn/oauth2/token\
                    \ An error occurred while，\n    Add to the return parameter error=errorcodestatus\n\nFIXME: In the document YOUR_REGISTERED_REDIRECT_URI/?code=CODE\
                    \ with “/”，butnotebutthebutwithbut？\n\n:param code: authorization code\n:return:"
               operationId: umt_authorize_callback_api_umt_callback__get
               parameters:
               -    required: true
                    schema:
                         title: Code
                         type: string
                    name: code
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/umt/:
          post:
               tags:
               - umt
               summary: User creation
               description: Create new user.
               operationId: create_user_api_umt__post
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_create_user_api_umt__post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/users/:
          post:
               tags:
               - users
               summary: User creation
               description: Create new user.
               operationId: create_user_api_users__post
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_create_user_api_users__post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/users/{user_id}:
          get:
               tags:
               - users
               summary: User details（Personal Center）
               description: Retrieve user
               operationId: read_user_api_users__user_id__get
               parameters:
               -    required: true
                    schema:
                         title: User Id
                         type: string
                    name: user_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - users
               summary: User updates（Personal Center）
               description: Logged in user，Change oneselftheChange oneself（name，password，avatar Etc.）
               operationId: update_user_api_users__user_id__put
               parameters:
               -    required: true
                    schema:
                         title: User Id
                         type: string
                    name: user_id
                    in: path
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_update_user_api_users__user_id__put'
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/images/:
          get:
               tags:
               - images
               summary: All Images
               operationId: all_images_api_images__get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema:
                                        title: Response All Images Api Images  Get
                                        type: array
                                        items:
                                             $ref: '#/components/schemas/ImagesSchema'
     /api/images/delete:
          delete:
               tags:
               - images
               summary: Delete Image
               operationId: delete_image_api_images_delete_delete
               parameters:
               -    required: true
                    schema:
                         title: Image Id
                         type: string
                    name: image_id
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/components/component/{function_name}:
          post:
               tags:
               - components
               summary: Component Start
               operationId: component_start_api_components_component__function_name__post
               parameters:
               -    required: true
                    schema:
                         title: Function Name
                         type: string
                    name: function_name
                    in: path
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Data
                                   type: object
                                   default: {}
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
          delete:
               tags:
               - components
               summary: Delete Component
               operationId: delete_component_api_components_component__function_name__delete
               parameters:
               -    required: true
                    schema:
                         title: Component Id
                         type: string
                    name: component_id
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/components/result/{task_id}:
          get:
               tags:
               - components
               summary: Component Start
               description: Result export
               operationId: component_start_api_components_result__task_id__get
               parameters:
               -    required: true
                    schema:
                         title: Task Id
                         type: string
                    name: task_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/components/visualization/{data_id}:
          get:
               tags:
               - components
               summary: Visualization
               operationId: visualization_api_components_visualization__data_id__get
               parameters:
               -    required: true
                    schema:
                         title: Data Id
                         type: string
                    name: data_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/VisualizationComponentsResponse'
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/components/visualization/{component_id}:
          delete:
               tags:
               - components
               summary: Delete Visualization Component
               operationId: delete_visualization_component_api_components_visualization__component_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Component Id
                         type: string
                    name: component_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/components/visualization_data:
          post:
               tags:
               - components
               summary: Create Visualization Response
               operationId: create_visualization_response_api_components_visualization_data_post
               requestBody:
                    content:
                         application/json:
                              schema:
                                   $ref: '#/components/schemas/VisualizationDataInCrate'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/components/custom/link:
          post:
               tags:
               - components
               summary: Update Market Component Custom
               operationId: update_market_component_custom_api_components_custom_link_post
               parameters:
               -    required: true
                    schema:
                         title: Component Id
                         type: string
                    name: component_id
                    in: query
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Params
                                   type: array
                                   items: {}
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/components/vis/{function_name}:
          post:
               tags:
               - components
               summary: Vis
               description: ':param function_name: faas visualization function service
                    <br>

                    :param data: <br>       example {"bucket": "test", "object_name":
                    "c/c/c/res.csv"} <br>

                    :return: {"data": [], "msg":"", "code"}'
               operationId: vis_api_components_vis__function_name__post
               parameters:
               -    required: true
                    schema:
                         title: Function Name
                         type: string
                    name: function_name
                    in: path
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Data
                                   type: object
                                   default: {}
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/components/structure:
          get:
               tags:
               - components
               summary: Structure Schema
               description: Returns a variabletheReturns a variableStructureReturns a variable
               operationId: structure_schema_api_components_structure_get
               parameters:
               -    required: true
                    schema:
                         title: Structure Id
                         type: string
                    name: structure_id
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - components
               summary: Structure View
               operationId: structure_view_api_components_structure_post
               parameters:
               -    required: true
                    schema:
                         title: Lab Id
                         type: string
                    name: lab_id
                    in: query
               -    required: false
                    schema:
                         title: Task Id
                         type: string
                    name: task_id
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/components/datasets/{lab_id}:
          get:
               tags:
               - components
               summary: Components Dataset
               description: 'Obtaining experimental data

                    :param lab_id: Experimentid

                    :param task_id: Operator executionid

                    :param name: Fuzzy query name

                    :param file_extension: fileTypesClassification

                    :param skip: Paging parameters，Start bit

                    :param limit: Paging parameters，Step size

                    :param deps: depth

                    :return:'
               operationId: components_dataset_api_components_datasets__lab_id__get
               parameters:
               -    required: true
                    schema:
                         title: Lab Id
                         type: string
                    name: lab_id
                    in: path
               -    required: false
                    schema:
                         title: Task Id
                         type: string
                    name: task_id
                    in: query
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: File Extension
                         type: string
                    name: file_extension
                    in: query
               -    required: false
                    schema:
                         title: Deps
                         type: integer
                         default: 0
                    name: deps
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - components
               summary: Delete Dataset
               operationId: delete_dataset_api_components_datasets__lab_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Lab Id
                         type: string
                    name: lab_id
                    in: path
               -    required: true
                    schema:
                         title: Task Id
                         type: string
                    name: task_id
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/components/resource/{task_id}:
          get:
               tags:
               - components
               summary: Get Runtime Resource Used
               operationId: get_runtime_resource_used_api_components_resource__task_id__get
               parameters:
               -    required: true
                    schema:
                         title: Task Id
                         type: string
                    name: task_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/components/iterdir/{lab_id}:
          get:
               tags:
               - components
               summary: traversaldatafiledata
               operationId: iterdir_task_dataset_api_components_iterdir__lab_id__get
               parameters:
               -    required: true
                    schema:
                         title: Lab Id
                         type: string
                    name: lab_id
                    in: path
               -    required: true
                    schema:
                         title: Dir Path
                         type: string
                    name: dir_path
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/components/download:
          get:
               tags:
               - components
               summary: Download Lab Data
               description: 'Data downloadinterface，flag Distinction Object Storage System/fileinterface，fileinterfaceforzip <br>

                    :param flag:  Distinctionstorage system ，storage system thestorage system myDataMarking,Experimentstorage system thestorage system ExperimentID <br>

                    :param object_name: wantDownloadthefilewant/Object name <br>

                    :return: StreamingResponse/fileIf it does not exist, then404 <br>'
               operationId: download_lab_data_api_components_download_get
               parameters:
               -    required: false
                    schema:
                         title: Flag
                         type: string
                    name: flag
                    in: query
               -    required: false
                    schema:
                         title: Object Name
                         type: string
                    name: object_name
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/components/function:
          get:
               tags:
               - components
               summary: Get All Components Isinstance
               operationId: get_all_components_isinstance_api_components_function_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/components/test/{function_name}:
          post:
               tags:
               - components
               summary: Component Start
               operationId: component_start_api_components_test__function_name__post
               parameters:
               -    required: true
                    schema:
                         title: Function Name
                         type: string
                    name: function_name
                    in: path
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Data
                                   type: object
                                   default: {}
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/components/callback/{task_id}:
          post:
               tags:
               - components
               summary: Task Callback Signal
               operationId: task_callback_signal_api_components_callback__task_id__post
               parameters:
               -    required: true
                    schema:
                         title: Task Id
                         type: string
                    name: task_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/deploy/function/upload:
          post:
               tags:
               - function_deploy
               summary: Operator compression package(zipFormat)Upload
               description: UploadInclusion operatortheInclusion operator  (FormatInclusion operator zip)
               operationId: package_upload_api_deploy_function_upload_post
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_package_upload_api_deploy_function_upload_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/deploy/deploy/{component_id}:
          post:
               tags:
               - function_deploy
               summary: Deploy Function
               operationId: deploy_function_api_deploy_deploy__component_id__post
               parameters:
               -    required: true
                    schema:
                         title: Component Id
                         type: string
                    name: component_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/deploy/market/install:
          post:
               tags:
               - function_deploy
               summary: Fair Market Components List
               operationId: fair_market_components_list_api_deploy_market_install_post
               parameters:
               -    required: true
                    schema:
                         title: Component Id
                         type: string
                    name: component_id
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/deploy/install/task:
          get:
               tags:
               - function_deploy
               summary: Get Component Install Task List
               description: 'ComponentsinstallLists </br>

                    :param skip: Paging parameters </br>

                    :param limit: Paging parameters</br>

                    :param name: According toNameretrieval</br>

                    :param state: According toStatus retrieval PULL Status retrieval,BUILD Status retrieval,DEPLOY Status retrieval,SUCCESS Status retrieval,FAILED
                    failure</br>

                    :param source_type: According tosourceTypessource，NATIVE sourceComponentsUploadsourcethe，MARKET sourcethe </br>

                    :param current_user:

                    :return:'
               operationId: get_component_install_task_list_api_deploy_install_task_get
               parameters:
               -    required: false
                    schema:
                         title: Skip
                         type: integer
                         default: 0
                    name: skip
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: State
                         type: string
                    name: state
                    in: query
               -    required: false
                    schema:
                         title: Source Type
                         type: string
                    name: source_type
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - function_deploy
               summary: Create Component Install Task
               operationId: create_component_install_task_api_deploy_install_task_post
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/deploy/market/components:
          get:
               tags:
               - function_deploy
               summary: Fair Market Components List
               description: Access the Fast man market
               operationId: fair_market_components_list_api_deploy_market_components_get
               parameters:
               -    required: false
                    schema:
                         title: Component Id
                         type: string
                    name: component_id
                    in: query
               -    required: false
                    schema:
                         title: Component Name
                         type: string
                    name: component_name
                    in: query
               -    required: false
                    schema:
                         title: Author
                         type: string
                    name: author
                    in: query
               -    required: false
                    schema:
                         title: Category
                         type: string
                    name: category
                    in: query
               -    required: false
                    schema:
                         title: Order By
                         type: string
                    name: order_by
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               -    required: false
                    schema:
                         title: Suffix
                         type: string
                    name: suffix
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/deploy/market/components/tree:
          get:
               tags:
               - function_deploy
               summary: Fair Market Component Tree
               description: category
               operationId: fair_market_component_tree_api_deploy_market_components_tree_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/data_center/:
          get:
               tags:
               - personal_data_center
               summary: My Data List
               operationId: my_data_list_api_data_center__get
               parameters:
               -    required: false
                    schema:
                         title: Skip
                         type: integer
                         default: 0
                    name: skip
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Dataset Id
                         type: string
                    name: dataset_id
                    in: query
               -    required: false
                    schema:
                         title: Data Path
                         type: string
                    name: data_path
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - personal_data_center
               summary: Delete/Batch sizeDeletedata
               operationId: delete_datasets_api_data_center__delete
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Datasets Id
                                   type: array
                                   items: {}
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/data_center/share:
          get:
               tags:
               - personal_data_center
               summary: I sharetheI share
               operationId: my_share_api_data_center_share_get
               parameters:
               -    required: false
                    schema:
                         title: Skip
                         type: integer
                         default: 0
                    name: skip
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               -    required: false
                    schema:
                         title: User Name
                         type: string
                    name: user_name
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          post:
               tags:
               - personal_data_center
               summary: Share MetheShare MetheShare Me
               operationId: my_data_share_api_data_center_share_post
               parameters:
               -    required: true
                    schema:
                         title: Datasets Id
                         type: string
                    name: datasets_id
                    in: query
               -    required: true
                    schema:
                         title: Share User Id
                         type: string
                    name: share_user_id
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - personal_data_center
               summary: Unshare
               operationId: undo_data_share_api_data_center_share_delete
               parameters:
               -    required: true
                    schema:
                         title: Datasets Id
                         type: string
                    name: datasets_id
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/data_center/from_share:
          get:
               tags:
               - personal_data_center
               summary: From sharingtheFrom sharing
               operationId: my_share_api_data_center_from_share_get
               parameters:
               -    required: false
                    schema:
                         title: Skip
                         type: integer
                         default: 0
                    name: skip
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               -    required: false
                    schema:
                         title: User Name
                         type: string
                    name: user_name
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/data_center/public:
          get:
               tags:
               - personal_data_center
               summary: Access to open data
               operationId: get_public_data_api_data_center_public_get
               parameters:
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/data_center/public/data:
          get:
               tags:
               - personal_data_center
               summary: Access to open dataSubsettheSubsetfile
               operationId: get_public_file_api_data_center_public_data_get
               parameters:
               -    required: true
                    schema:
                         title: Dataset Id
                         type: string
                    name: dataset_id
                    in: query
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: File Extension
                         type: string
                    name: file_extension
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/data_center/datasets:
          get:
               tags:
               - personal_data_center
               summary: Get All Datasets
               operationId: get_all_datasets_api_data_center_datasets_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/data_center/datasets/{datasets_id}:
          get:
               tags:
               - personal_data_center
               summary: Get the data file under the dataset
               operationId: get_datasets_file_api_data_center_datasets__datasets_id__get
               parameters:
               -    required: true
                    schema:
                         title: Dataset Id
                         type: string
                    name: dataset_id
                    in: query
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: File Extension
                         type: string
                    name: file_extension
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/data_center/upload/file:
          post:
               tags:
               - personal_data_center
               summary: Upload Big File
               operationId: upload_big_file_api_data_center_upload_file_post
               requestBody:
                    content:
                         multipart/form-data:
                              schema:
                                   $ref: '#/components/schemas/Body_upload_big_file_api_data_center_upload_file_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/data_center/upload/merge_file:
          post:
               tags:
               - personal_data_center
               summary: Merge File
               operationId: merge_file_api_data_center_upload_merge_file_post
               requestBody:
                    content:
                         application/x-www-form-urlencoded:
                              schema:
                                   $ref: '#/components/schemas/Body_merge_file_api_data_center_upload_merge_file_post'
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/audit_center/audit/enumerate:
          get:
               tags:
               - personal_audit_center
               summary: Enumerate Audit Desc
               description: Enumerate auditsTypes </br>
               operationId: enumerate_audit_desc_api_audit_center_audit_enumerate_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/audit_center/audit/info:
          post:
               tags:
               - personal_audit_center
               summary: Audit Info
               description: 'The current userAudit information acquisition </br>

                    :param query_sets: Information retrieval </br>

                    :param skip:

                    :param limit:

                    :param current_user:

                    :return:'
               operationId: audit_info_api_audit_center_audit_info_post
               parameters:
               -    required: false
                    schema:
                         title: Skip
                         type: integer
                         default: 0
                    name: skip
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Query Sets
                                   type: object
                                   default: {}
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/audit_center/audit/counts:
          get:
               tags:
               - personal_audit_center
               summary: Audit Counts
               description: 'Audit InformationClassificationAudit Information [ { "audit_type" : "Components", "total": 1}] </br>

                    :param audit_type: AuditingTypesAuditing </br>

                    :param current_user: query onlyThe current userthe </br>

                    :return:'
               operationId: audit_counts_api_audit_center_audit_counts_get
               parameters:
               -    required: false
                    schema:
                         title: Audit Type
                         type: string
                    name: audit_type
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/audit_center/msg:
          get:
               tags:
               - personal_audit_center
               summary: Get Msg
               operationId: get_msg_api_audit_center_msg_get
               parameters:
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/audit_center/read/{msg_id}:
          get:
               tags:
               - personal_audit_center
               summary: Read Msg
               operationId: read_msg_api_audit_center_read__msg_id__get
               parameters:
               -    required: true
                    schema:
                         title: Msg Id
                         type: string
                    name: msg_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/board/:
          get:
               tags:
               - datalab_dashboard
               summary: Get Lab Report
               operationId: get_lab_report_api_board__get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
     /api/resource/computing:
          get:
               tags:
               - personal_resource
               summary: Personal Center-Computing resourcesLists
               operationId: computing_resources_api_resource_computing_get
               parameters:
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               -    required: false
                    schema:
                         title: Resource Type
                         type: string
                    name: resource_type
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/resource/apply/computing:
          post:
               tags:
               - personal_resource
               summary: Personal Center-Computing resource request
               description: 'ExistingtheComputing resourcesExisting </br>

                    :param content: Application Information</br>

                    :param resource_id: Computing resourcesid</br>

                    :param allocated_use_time: Application time unitforunit</br>

                    :return:'
               operationId: apply_computing_resources_api_resource_apply_computing_post
               parameters:
               -    required: true
                    schema:
                         title: Resource Id
                         type: string
                    name: resource_id
                    in: query
               -    required: true
                    schema:
                         title: Allocated Use Time
                         type: integer
                    name: allocated_use_time
                    in: query
               -    required: true
                    schema:
                         title: Content
                         type: string
                    name: content
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/resource/apply/storage:
          post:
               tags:
               - personal_resource
               summary: Personal Center-Storage resource request
               description: 'ExistingtheComputing resourcesExisting </br>

                    :param content: Application Information</br>

                    :param allocated_use: Applying for storage usage unitsforBytes</br>

                    :return:'
               operationId: apply_computing_resources_api_resource_apply_storage_post
               parameters:
               -    required: true
                    schema:
                         title: Allocated Use
                         type: integer
                    name: allocated_use
                    in: query
               -    required: true
                    schema:
                         title: Content
                         type: string
                    name: content
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/resource/statement:
          post:
               tags:
               - personal_resource
               summary: Personal CenterQuota flow details
               operationId: quota_statement_api_resource_statement_post
               parameters:
               -    required: false
                    schema:
                         title: Statement Id
                         type: string
                    name: statement_id
                    in: query
               -    required: false
                    schema:
                         title: Begin Time
                         type: string
                    name: begin_time
                    in: query
               -    required: false
                    schema:
                         title: End Time
                         type: string
                    name: end_time
                    in: query
               -    required: false
                    schema:
                         title: Order By
                         type: string
                    name: order_by
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/resource/balance:
          get:
               tags:
               - personal_resource
               summary: metheme
               operationId: get_my_balance_api_resource_balance_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/resource/data:
          get:
               tags:
               - personal_resource
               summary: metheme
               operationId: get_my_data_storage_size_api_resource_data_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/resource/recently:
          get:
               tags:
               - personal_resource
               summary: Recently usedtheRecently used/Experiment
               operationId: recently_used_api_resource_recently_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/resource/recently_data:
          get:
               tags:
               - personal_resource
               summary: Recent Achievements
               description: 'recentlytherecently<file/Objects> <br>

                    :return: {"data": [{"id": "", "type": "file/object", "format",
                    "name": "Name"}]}'
               operationId: recently_data_api_resource_recently_data_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/resource/overview:
          get:
               tags:
               - personal_resource
               summary: Overview Statistics<metheme,metheExperiment,metheme>
               description: 'Overview Statistics<metheme,metheExperiment,metheme> <br>

                    :return:{"experiments_count": "Experimentquantity", "analysis_count": "Number of analyses"，"project_count":
                    "Number of online programming projects"}'
               operationId: overview_total_api_resource_overview_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/resource/tools:
          get:
               tags:
               - personal_resource
               summary: I submittheComponents
               description: 'Personal CenterHome page overview，<Home page overviewtheComponents> <br>

                    :return:{"data": {"draft": "draftthedraft", "under_review": "draftthedraft"，"audited":
                    "To reviewtheTo review"}}'
               operationId: my_tools_info_api_resource_tools_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/resource/skeleton:
          get:
               tags:
               - personal_resource
               summary: I postedtheI posted
               description: 'Personal CenterHome page overview，<Home page overviewtheHome page overview> <br>

                    :return:{"data": {"draft": "draftthedraft", "under_review": "draftthedraft"，"audited":
                    "To reviewtheTo review"}}'
               operationId: my_publish_skeletons_api_resource_skeleton_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/resource/exchange/storage:
          post:
               tags:
               - personal_resource
               summary: Use quota to redeem storage
               operationId: exchange_storage_api_resource_exchange_storage_post
               parameters:
               -    required: true
                    schema:
                         title: Storage Size
                         type: number
                    name: storage_size
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/flow/dag/{experiments_id}:
          get:
               tags:
               - component_chain
               summary: Components Dataset
               operationId: components_dataset_api_flow_dag__experiments_id__get
               parameters:
               -    required: true
                    schema:
                         title: Experiments Id
                         type: string
                    name: experiments_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/flow/{analysis_id}:
          post:
               tags:
               - component_chain
               summary: Component Start
               operationId: component_start_api_flow__analysis_id__post
               parameters:
               -    required: true
                    schema:
                         title: Analysis Id
                         type: string
                    name: analysis_id
                    in: path
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Data
                                   type: object
                    required: true
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/flow/results/{analysis_id}:
          get:
               tags:
               - component_chain
               summary: Get Analysis Result
               operationId: get_analysis_result_api_flow_results__analysis_id__get
               parameters:
               -    required: true
                    schema:
                         title: Analysis Id
                         type: string
                    name: analysis_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/fair/instdb:
          post:
               tags:
               - personal center fair data
               summary: Instdb Link
               operationId: instdb_link_api_fair_instdb_post
               parameters:
               -    required: true
                    schema:
                         title: Url
                         type: string
                    name: url
                    in: query
               -    required: true
                    schema:
                         title: Secret Key
                         type: string
                    name: secret_key
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/msg/:
          get:
               tags:
               - personal center message
               summary: Msg V2
               description: 'ExistingtheComputing resourcesExisting </br>

                    :param user: Specify resource acquisitiontheSpecify resource acquisitionid</br>

                    :param base_id: Computing resourcesid</br>

                    :param allocated_use_time: Authorized use time unitforunit</br>

                    :return:'
               operationId: msg_v2_api_msg__get
               parameters:
               -    required: false
                    schema:
                         title: Title
                         type: string
                    name: title
                    in: query
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Limit
                         type: integer
                         default: 10
                    name: limit
                    in: query
               -    required: false
                    schema:
                         title: Operation
                         type: boolean
                    name: operation
                    in: query
               -    required: false
                    schema:
                         title: Operation Type
                         type: boolean
                    name: operation_type
                    in: query
               -    required: false
                    schema:
                         title: Unread
                         type: boolean
                         default: true
                    name: unread
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          put:
               tags:
               - personal center message
               summary: Submit Msg
               operationId: submit_msg_api_msg__put
               parameters:
               -    required: true
                    schema:
                         title: Msg Id
                         type: string
                    name: msg_id
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/serialize/test/{function_name}:
          post:
               tags:
               - serialize functions
               summary: Component Start
               operationId: component_start_api_serialize_test__function_name__post
               parameters:
               -    required: true
                    schema:
                         title: Function Name
                         type: string
                    name: function_name
                    in: path
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Data
                                   type: object
                                   default: {}
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/serialize/notebook:
          post:
               tags:
               - serialize functions
               summary: Create Notebook
               operationId: create_notebook_api_serialize_notebook_post
               parameters:
               -    required: true
                    schema:
                         title: App Id
                         type: string
                    name: app_id
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
     /api/notebook/language:
          get:
               tags:
               - Online Edit Code
               summary: Obtain current supporttheObtain current support
               operationId: get_language_api_notebook_language_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
               security:
               -    OAuth2PasswordBearer: []
     /api/notebook/subject:
          get:
               tags:
               - Online Edit Code
               summary: Obtain subject areasLists
               operationId: get_subject_api_notebook_subject_get
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
     /api/notebook/project:
          post:
               tags:
               - Online Edit Code
               summary: Create online programmingtheCreate online programming
               operationId: create_project_api_notebook_project_post
               parameters:
               -    required: true
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: true
                    schema:
                         title: Language Id
                         type: string
                    name: language_id
                    in: query
               -    required: false
                    schema:
                         title: Subject
                         type: string
                    name: subject
                    in: query
               -    required: false
                    schema:
                         title: Description
                         type: string
                    name: description
                    in: query
               requestBody:
                    content:
                         application/json:
                              schema:
                                   title: Data Source
                                   type: array
                                   items: {}
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/notebook/project/{project_id}:
          put:
               tags:
               - Online Edit Code
               summary: Modify the project metadata
               operationId: update_project_meta_api_notebook_project__project_id__put
               parameters:
               -    required: true
                    schema:
                         title: Project Id
                         type: string
                    name: project_id
                    in: path
               -    required: false
                    schema:
                         title: Name
                         type: string
                    name: name
                    in: query
               -    required: false
                    schema:
                         title: Description
                         type: string
                    name: description
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
          delete:
               tags:
               - Online Edit Code
               summary: DeleteA project
               operationId: delete_project_api_notebook_project__project_id__delete
               parameters:
               -    required: true
                    schema:
                         title: Project Id
                         type: string
                    name: project_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/notebook/projects:
          get:
               tags:
               - Online Edit Code
               summary: obtainThe current usertheobtain
               operationId: projects_api_notebook_projects_get
               parameters:
               -    required: false
                    schema:
                         title: Page
                         type: integer
                         default: 0
                    name: page
                    in: query
               -    required: false
                    schema:
                         title: Size
                         type: integer
                         default: 10
                    name: size
                    in: query
               -    required: false
                    schema:
                         title: Project Name
                         type: string
                    name: project_name
                    in: query
               -    required: false
                    schema:
                         title: Order By
                         type: string
                         default: create_at
                    name: order_by
                    in: query
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
     /api/notebook/redirect/{project_id}:
          get:
               tags:
               - Online Edit Code
               summary: Jump to projectcorrespondencetheJump to project
               operationId: redirect_router_path_api_notebook_redirect__project_id__get
               parameters:
               -    required: true
                    schema:
                         title: Project Id
                         type: string
                    name: project_id
                    in: path
               responses:
                    '200':
                         description: Successful Response
                         content:
                              application/json:
                                   schema: {}
                    '422':
                         description: Validation Error
                         content:
                              application/json:
                                   schema:
                                        $ref: '#/components/schemas/HTTPValidationError'
               security:
               -    OAuth2PasswordBearer: []
components:
     schemas:
          Analysis2CreateSchema:
               title: Analysis2CreateSchema
               required:
               - skeleton
               - name
               type: object
               properties:
                    skeleton:
                         title: Skeleton
                         type: string
                    is_trial:
                         title: Is Trial
                         type: boolean
                         default: false
                    name:
                         title: Name
                         type: string
                    description:
                         title: Description
                         type: string
          Analysis2UpdateSchema:
               title: Analysis2UpdateSchema
               type: object
               properties:
                    name:
                         title: Name
                         type: string
                    description:
                         title: Description
                         type: string
                    inputs:
                         title: Inputs
                         type: array
                         items:
                              type: object
                    outputs:
                         title: Outputs
                         type: array
                         items:
                              type: object
                    state:
                         title: State
                         type: string
          Body_add_dataset_file_api_admin_res_adm_data_data_post:
               title: Body_add_dataset_file_api_admin_res_adm_data_data_post
               required:
               - file
               type: object
               properties:
                    file:
                         title: File
                         type: string
                         format: binary
          Body_create_datasets_from_source_api_admin_res_adm_data_datasets_post:
               title: Body_create_datasets_from_source_api_admin_res_adm_data_datasets_post
               required:
               - source_id
               - name
               - description
               type: object
               properties:
                    source_id:
                         title: Source Id
                         type: string
                    name:
                         title: Name
                         type: string
                    description:
                         title: Description
                         type: string
          Body_create_experimentui_api_admin_base_ui_experimentui_post:
               title: Body_create_experimentui_api_admin_base_ui_experimentui_post
               required:
               - intro
               type: object
               properties:
                    intro:
                         title: Intro
                         type: string
          Body_create_platform_api_admin_base_ui_platform_post:
               title: Body_create_platform_api_admin_base_ui_platform_post
               required:
               - file
               - name
               type: object
               properties:
                    file:
                         title: File
                         type: string
                         format: binary
                    name:
                         title: Name
                         type: string
                    copyright:
                         title: Copyright
                         type: string
                    filingNo:
                         title: Filingno
                         type: string
          Body_create_public_data_api_admin_res_adm_data__post:
               title: Body_create_public_data_api_admin_res_adm_data__post
               required:
               - icon
               type: object
               properties:
                    icon:
                         title: Icon
                         type: string
                         format: binary
          Body_create_skeletonui_api_admin_base_ui_skeletonui_post:
               title: Body_create_skeletonui_api_admin_base_ui_skeletonui_post
               required:
               - intro
               type: object
               properties:
                    intro:
                         title: Intro
                         type: string
          Body_create_user_api_admin_user_adm_users__post:
               title: Body_create_user_api_admin_user_adm_users__post
               required:
               - name
               - email
               - organization
               - password
               type: object
               properties:
                    name:
                         title: Name
                         type: string
                    email:
                         title: Email
                         type: string
                    organization:
                         title: Organization
                         type: string
                    password:
                         title: Password
                         type: string
          Body_create_user_api_umt__post:
               title: Body_create_user_api_umt__post
               required:
               - name
               - email
               - organization
               - password
               type: object
               properties:
                    name:
                         title: Name
                         type: string
                    email:
                         title: Email
                         type: string
                    organization:
                         title: Organization
                         type: string
                    password:
                         title: Password
                         type: string
          Body_create_user_api_users__post:
               title: Body_create_user_api_users__post
               required:
               - name
               - email
               - organization
               - password
               type: object
               properties:
                    name:
                         title: Name
                         type: string
                    email:
                         title: Email
                         type: string
                    organization:
                         title: Organization
                         type: string
                    password:
                         title: Password
                         type: string
          Body_forget_password_api_passwordForget_post:
               title: Body_forget_password_api_passwordForget_post
               required:
               - username
               - email
               type: object
               properties:
                    username:
                         title: Username
                         type: string
                    email:
                         title: Email
                         type: string
          Body_integration_server_api_admin_microservices_integration_server_post:
               title: Body_integration_server_api_admin_microservices_integration_server_post
               required:
               - name
               - host
               - port
               - router_path
               type: object
               properties:
                    name:
                         title: Name
                         type: string
                    host:
                         title: Host
                         type: string
                    port:
                         title: Port
                         type: integer
                    description:
                         title: Description
                         type: string
                    router_path:
                         title: Router Path
                         type: string
                    file:
                         title: File
                         type: string
                         format: binary
          Body_login_for_access_token_api_login_post:
               title: Body_login_for_access_token_api_login_post
               required:
               - username
               - password
               type: object
               properties:
                    grant_type:
                         title: Grant Type
                         pattern: password
                         type: string
                    username:
                         title: Username
                         type: string
                    password:
                         title: Password
                         type: string
                    scope:
                         title: Scope
                         type: string
                         default: ''
                    client_id:
                         title: Client Id
                         type: string
                    client_secret:
                         title: Client Secret
                         type: string
          Body_merge_file_api_admin_res_adm_data_datasets_merge_file_post:
               title: Body_merge_file_api_admin_res_adm_data_datasets_merge_file_post
               required:
               - datasets_id
               - identifier
               - file_name
               - chunk_star
               type: object
               properties:
                    datasets_id:
                         title: Datasets Id
                         type: string
                    identifier:
                         title: Identifier
                         type: string
                    file_name:
                         title: File Name
                         type: string
                    chunk_star:
                         title: Chunk Star
                         type: integer
          Body_merge_file_api_data_center_upload_merge_file_post:
               title: Body_merge_file_api_data_center_upload_merge_file_post
               required:
               - identifier
               - file_name
               - chunk_star
               type: object
               properties:
                    identifier:
                         title: Identifier
                         type: string
                    file_name:
                         title: File Name
                         type: string
                    chunk_star:
                         title: Chunk Star
                         type: integer
          Body_package_upload_api_deploy_function_upload_post:
               title: Body_package_upload_api_deploy_function_upload_post
               required:
               - files
               type: object
               properties:
                    files:
                         title: Files
                         type: array
                         items:
                              type: string
                              format: binary
          Body_reset_password_api_passwordReset_post:
               title: Body_reset_password_api_passwordReset_post
               required:
               - token
               - password
               type: object
               properties:
                    token:
                         title: Token
                         type: string
                    password:
                         title: Password
                         type: string
          Body_update_emailconf_api_admin_base_sysconf_emailconfs__conf_id__put:
               title: Body_update_emailconf_api_admin_base_sysconf_emailconfs__conf_id__put
               type: object
               properties:
                    is_selected:
                         title: Is Selected
                         type: boolean
                    use_tls:
                         title: Use Tls
                         type: boolean
                    port:
                         title: Port
                         type: integer
                    host:
                         title: Host
                         type: string
                    user:
                         title: User
                         type: string
                    password:
                         title: Password
                         type: string
          Body_update_experimentui_api_admin_base_ui_experimentui_put:
               title: Body_update_experimentui_api_admin_base_ui_experimentui_put
               type: object
               properties:
                    intro:
                         title: Intro
                         type: string
          Body_update_indexui_file_api_admin_base_ui_indexui_file_put:
               title: Body_update_indexui_file_api_admin_base_ui_indexui_file_put
               required:
               - file
               type: object
               properties:
                    file:
                         title: File
                         type: string
                         format: binary
          Body_update_platform_api_admin_base_ui_platform_put:
               title: Body_update_platform_api_admin_base_ui_platform_put
               type: object
               properties:
                    file:
                         title: File
                         type: string
                         format: binary
                    name:
                         title: Name
                         type: string
                    copyright:
                         title: Copyright
                         type: string
                    filingNo:
                         title: Filingno
                         type: string
          Body_update_public_data_metadata_api_admin_res_adm_data__put:
               title: Body_update_public_data_metadata_api_admin_res_adm_data__put
               type: object
               properties:
                    icon:
                         title: Icon
                         type: string
                         format: binary
          Body_update_service_metadata_api_admin_microservices_update_service__service_id__put:
               title: Body_update_service_metadata_api_admin_microservices_update_service__service_id__put
               type: object
               properties:
                    name:
                         title: Name
                         type: string
          Body_update_skeleton_api_admin_skel_adm__skeleton_id__put:
               title: Body_update_skeleton_api_admin_skel_adm__skeleton_id__put
               type: object
               properties:
                    category:
                         title: Category
                         type: string
                    is_online:
                         title: Is Online
                         type: boolean
          Body_update_skeleton_intro_api_skeletons_intro__skeleton_id__put:
               title: Body_update_skeleton_intro_api_skeletons_intro__skeleton_id__put
               type: object
               properties:
                    version:
                         title: Version
                         type: string
                    version_meaning:
                         title: Version Meaning
                         type: string
                    name:
                         title: Name
                         type: string
                    description:
                         title: Description
                         type: string
                    introduction:
                         title: Introduction
                         type: string
                    logo:
                         title: Logo
                         type: string
                         format: binary
                    previews:
                         title: Previews
                         type: array
                         items:
                              type: string
                              format: binary
                    organization:
                         title: Organization
                         type: string
                    developer:
                         title: Developer
                         type: string
                    contact_name:
                         title: Contact Name
                         type: string
                    contact_email:
                         title: Contact Email
                         type: string
                    contact_phone:
                         title: Contact Phone
                         type: string
                    statement:
                         title: Statement
                         type: string
          Body_update_skeletonui_api_admin_base_ui_skeletonui_put:
               title: Body_update_skeletonui_api_admin_base_ui_skeletonui_put
               type: object
               properties:
                    intro:
                         title: Intro
                         type: string
          Body_update_user_api_admin_user_adm_users__user_id__put:
               title: Body_update_user_api_admin_user_adm_users__user_id__put
               type: object
               properties:
                    role:
                         title: Role
                         type: string
                    is_active:
                         title: Is Active
                         type: boolean
          Body_update_user_api_users__user_id__put:
               title: Body_update_user_api_users__user_id__put
               type: object
               properties:
                    name:
                         title: Name
                         type: string
                    organization:
                         title: Organization
                         type: string
                    password:
                         title: Password
                         type: string
                    avatar:
                         title: Avatar
                         type: string
                         format: binary
          Body_upload_big_file_api_admin_res_adm_data_datasets_upload_file_post:
               title: Body_upload_big_file_api_admin_res_adm_data_datasets_upload_file_post
               required:
               - datasets_id
               - file
               - chunk_number
               - identifier
               - total_size
               - total_chunks
               - relative_path
               - current_chunk_size
               type: object
               properties:
                    datasets_id:
                         title: Datasets Id
                         type: string
                    file:
                         title: File
                         type: string
                         format: binary
                    chunk_number:
                         title: Chunk Number
                         type: string
                    identifier:
                         title: Identifier
                         type: string
                    total_size:
                         title: Total Size
                         type: integer
                    total_chunks:
                         title: Total Chunks
                         type: integer
                    relative_path:
                         title: Relative Path
                         type: string
                    current_chunk_size:
                         title: Current Chunk Size
                         type: integer
          Body_upload_big_file_api_data_center_upload_file_post:
               title: Body_upload_big_file_api_data_center_upload_file_post
               required:
               - file
               - chunk_number
               - identifier
               - total_size
               - total_chunks
               - relative_path
               - current_chunk_size
               type: object
               properties:
                    file:
                         title: File
                         type: string
                         format: binary
                    chunk_number:
                         title: Chunk Number
                         type: string
                    identifier:
                         title: Identifier
                         type: string
                    total_size:
                         title: Total Size
                         type: integer
                    total_chunks:
                         title: Total Chunks
                         type: integer
                    relative_path:
                         title: Relative Path
                         type: string
                    current_chunk_size:
                         title: Current Chunk Size
                         type: integer
          Body_upload_dataset_file_api_datasets_file_upload_post:
               title: Body_upload_dataset_file_api_datasets_file_upload_post
               required:
               - files
               type: object
               properties:
                    files:
                         title: Files
                         type: array
                         items:
                              type: string
                              format: binary
          Body_upload_dataset_file_api_datasets_s3_file_upload_post:
               title: Body_upload_dataset_file_api_datasets_s3_file_upload_post
               required:
               - files
               type: object
               properties:
                    files:
                         title: Files
                         type: array
                         items:
                              type: string
                              format: binary
          Body_upload_dataset_folder_api_datasets_folder_upload_post:
               title: Body_upload_dataset_folder_api_datasets_folder_upload_post
               required:
               - file
               type: object
               properties:
                    file:
                         title: File
                         type: string
                         format: binary
          Body_upload_dataset_folder_api_datasets_s3_folder_upload_post:
               title: Body_upload_dataset_folder_api_datasets_s3_folder_upload_post
               required:
               - file
               type: object
               properties:
                    file:
                         title: File
                         type: string
                         format: binary
          Body_upload_zipfiles_api_toolsource_zipfiles_upload_post:
               title: Body_upload_zipfiles_api_toolsource_zipfiles_upload_post
               required:
               - files
               type: object
               properties:
                    files:
                         title: Files
                         type: array
                         items:
                              type: string
                              format: binary
          DatasetUpdateSchema:
               title: DatasetUpdateSchema
               type: object
               properties:
                    description:
                         title: Description
                         type: string
          ExperimentBaseSchema:
               title: ExperimentBaseSchema
               required:
               - name
               type: object
               properties:
                    is_trial:
                         title: Is Trial
                         type: boolean
                         default: false
                    trial_tool_id:
                         title: Trial Tool Id
                         type: string
                    name:
                         title: Name
                         type: string
                    description:
                         title: Description
                         type: string
          ExperimentBatchDeleteSchema:
               title: ExperimentBatchDeleteSchema
               type: object
               properties:
                    ids:
                         title: Ids
                         type: array
                         items:
                              type: string
          ExperimentInDBSchema:
               title: ExperimentInDBSchema
               required:
               - name
               type: object
               properties:
                    is_trial:
                         title: Is Trial
                         type: boolean
                         default: false
                    trial_tool_id:
                         title: Trial Tool Id
                         type: string
                    name:
                         title: Name
                         type: string
                    description:
                         title: Description
                         type: string
                    id:
                         title: Id
                         type: string
                    is_shared:
                         title: Is Shared
                         type: boolean
                    shared_from_experiment:
                         title: Shared From Experiment
                         type: string
                    user:
                         title: User
                         type: string
                    tasks:
                         title: Tasks
                         type: array
                         items:
                              type: string
                    created_at:
                         title: Created At
                         type: string
                         format: date-time
                    updated_at:
                         title: Updated At
                         type: string
                         format: date-time
          ExperimentUpdateSchema:
               title: ExperimentUpdateSchema
               type: object
               properties:
                    name:
                         title: Name
                         type: string
                    description:
                         title: Description
                         type: string
          HTTPValidationError:
               title: HTTPValidationError
               type: object
               properties:
                    detail:
                         title: Detail
                         type: array
                         items:
                              $ref: '#/components/schemas/ValidationError'
          ImagesSchema:
               title: ImagesSchema
               required:
               - id
               - image_id
               - image_short_id
               - source_id
               - source_name
               - tags
               - image_size
               - from_user
               - created_at
               type: object
               properties:
                    id:
                         title: Id
                         type: string
                    image_id:
                         title: Image Id
                         type: string
                    image_short_id:
                         title: Image Short Id
                         type: string
                    source_id:
                         title: Source Id
                         type: string
                    source_name:
                         title: Source Name
                         type: string
                    tags:
                         title: Tags
                         type: string
                    image_size:
                         title: Image Size
                         type: integer
                    from_user:
                         title: From User
                         type: string
                    created_at:
                         title: Created At
                         type: string
          RoleBaseSchema:
               title: RoleBaseSchema
               required:
               - id
               - name
               type: object
               properties:
                    id:
                         title: Id
                         type: string
                    name:
                         title: Name
                         type: string
                    is_innate:
                         title: Is Innate
                         type: boolean
                    is_default_role:
                         title: Is Default Role
                         type: boolean
          RoleCreateSchema:
               title: RoleCreateSchema
               required:
               - name
               - permissions
               type: object
               properties:
                    name:
                         title: Name
                         type: string
                    is_default_role:
                         title: Is Default Role
                         type: boolean
                         default: false
                    permissions:
                         title: Permissions
                         type: array
                         items:
                              type: object
          RoleSchema:
               title: RoleSchema
               required:
               - id
               - name
               type: object
               properties:
                    id:
                         title: Id
                         type: string
                    name:
                         title: Name
                         type: string
                    permissions:
                         title: Permissions
                         type: array
                         items:
                              type: object
                    is_innate:
                         title: Is Innate
                         type: boolean
                    is_default_role:
                         title: Is Default Role
                         type: boolean
                    creator:
                         title: Creator
                         type: string
                    created_at:
                         title: Created At
                         type: string
                         format: date-time
                    updated_at:
                         title: Updated At
                         type: string
                         format: date-time
          RoleUpdateSchema:
               title: RoleUpdateSchema
               type: object
               properties:
                    name:
                         title: Name
                         type: string
                    is_default_role:
                         title: Is Default Role
                         type: boolean
                         default: false
                    permissions:
                         title: Permissions
                         type: array
                         items:
                              type: object
          Skeleton2CreateSchema:
               title: Skeleton2CreateSchema
               required:
               - experiment
               - experiment_tasks
               - experiment_tasks_datasets
               type: object
               properties:
                    skeleton_renewed:
                         title: Skeleton Renewed
                         type: string
                    experiment:
                         title: Experiment
                         type: string
                    experiment_tasks:
                         title: Experiment Tasks
                         type: array
                         items:
                              type: string
                    experiment_tasks_datasets:
                         title: Experiment Tasks Datasets
                         type: array
                         items:
                              type: object
                    name:
                         title: Name
                         type: string
                    description:
                         title: Description
                         type: string
                    introduction:
                         title: Introduction
                         type: string
                    dag:
                         title: Dag
                         type: array
                         items:
                              type: object
          Skeleton2UpdateSchema:
               title: Skeleton2UpdateSchema
               type: object
               properties:
                    dag:
                         title: Dag
                         type: array
                         items:
                              type: object
                    inputs:
                         title: Inputs
                         type: array
                         items:
                              type: object
                    outputs:
                         title: Outputs
                         type: array
                         items:
                              type: object
                    inputs_config:
                         title: Inputs Config
                         type: object
                    outputs_config:
                         title: Outputs Config
                         type: object
          TokenSchema:
               title: TokenSchema
               required:
               - access_token
               - token_type
               type: object
               properties:
                    access_token:
                         title: Access Token
                         type: string
                    token_type:
                         title: Token Type
                         type: string
          ToolTaskCreateSchema:
               title: ToolTaskCreateSchema
               required:
               - experiment_id
               type: object
               properties:
                    experiment_id:
                         title: Experiment Id
                         type: string
                    name:
                         title: Name
                         type: string
                    description:
                         title: Description
                         type: string
               description: '    '
          ToolTaskCreatedSchema:
               title: ToolTaskCreatedSchema
               required:
               - experiment_id
               - tool_task_id
               type: object
               properties:
                    experiment_id:
                         title: Experiment Id
                         type: string
                    tool_task_id:
                         title: Tool Task Id
                         type: string
               description: '    '
          ToolTaskUpdateSchema:
               title: ToolTaskUpdateSchema
               type: object
               properties:
                    name:
                         title: Name
                         type: string
                    description:
                         title: Description
                         type: string
                    tool_id:
                         title: Tool Id
                         type: string
                    inputs:
                         title: Inputs
                         type: array
                         items:
                              type: object
                    outputs:
                         title: Outputs
                         type: array
                         items:
                              type: object
                    status:
                         title: Status
                         type: string
          ToolsTreeSchema:
               title: ToolsTreeSchema
               required:
               - name
               - level
               type: object
               properties:
                    id:
                         title: Id
                         type: string
                         default: fce10cb3-7317-4a4d-bb84-f895fe34bd66
                    name:
                         title: Name
                         type: string
                    level:
                         title: Level
                         type: integer
                    parent:
                         title: Parent
                         type: string
                         default: root
          TrialExperimentSchema:
               title: TrialExperimentSchema
               required:
               - trial_tool_id
               - name
               type: object
               properties:
                    trial_tool_id:
                         title: Trial Tool Id
                         type: string
                    name:
                         title: Name
                         type: string
                    description:
                         title: Description
                         type: string
          UiUpdateForm:
               title: UiUpdateForm
               type: object
               properties:
                    title:
                         title: Title
                         type: string
                    intro:
                         title: Intro
                         type: string
                    styles_start:
                         title: Styles Start
                         type: object
                    styles_stats:
                         title: Styles Stats
                         type: object
                    styles_copyright:
                         title: Styles Copyright
                         type: object
          ValidationError:
               title: ValidationError
               required:
               - loc
               - msg
               - type
               type: object
               properties:
                    loc:
                         title: Location
                         type: array
                         items:
                              anyOf:
                              -    type: string
                              -    type: integer
                    msg:
                         title: Message
                         type: string
                    type:
                         title: Error Type
                         type: string
          VisualizationComponentsResponse:
               title: VisualizationComponentsResponse
               type: object
               properties:
                    name:
                         title: Name
                         type: string
                    data:
                         title: Data
                         type: string
                    installed:
                         title: Installed
                         type: boolean
                         default: false
                    other:
                         title: Other
                         type: array
                         items:
                              type: object
                    id:
                         title: Id
                         type: string
                    status:
                         title: Status
                         type: integer
                         default: 200
          VisualizationDataInCrate:
               title: VisualizationDataInCrate
               required:
               - data_id
               - component_id
               type: object
               properties:
                    data_id:
                         title: Data Id
                         type: string
                    component_id:
                         title: Component Id
                         type: string
     securitySchemes:
          OAuth2PasswordBearer:
               type: oauth2
               flows:
                    password:
                         scopes: {}
                         tokenUrl: /api/login
